{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c8be208f6ad4fd8180db889260d0049ba02389c4ed05a5b45579005089f176864736f6c634300081a0033","sourceMap":"735:17703:139:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;735:17703:139;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c8be208f6ad4fd8180db889260d0049ba02389c4ed05a5b45579005089f176864736f6c634300081a0033","sourceMap":"735:17703:139:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library defines the `History` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new checkpoint for the current transaction block using the {push} function. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"v1-migrator/contracts/dependencies/utils/CheckpointsUpgradeable.sol\":\"CheckpointsUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=v1-migrator/node_modules/@openzeppelin/\"]},\"sources\":{\"v1-migrator/contracts/dependencies/utils/CheckpointsUpgradeable.sol\":{\"keccak256\":\"0xcaf9d8f03ea1410b5a7923a89830d5fa0b9d8e521c72128a73abab0057d69f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab3059f969095fd221c0dfe5c806ea4c390d64480fa2c265a28858a2a2bc59e\",\"dweb:/ipfs/Qmbxc8yzpbQ5qAGKv1UNvaAc8UxHrBNPhBRxm7UAzZXbDQ\"]},\"v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]},\"v1-migrator/contracts/dependencies/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0x2b99b9d4fd6e581ab6e527ba452ee79a866a607b669c7aadb57660d945412258\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://452864fe0c5f950292ee06eb7d82c2bea858130a85bcf202b450c3c1e8ff86c0\",\"dweb:/ipfs/QmbvcZZtQBfWS6ZZ5Z14g8qWFM2Gmcs52W3dtrsnTuYEin\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=v1-migrator/node_modules/@openzeppelin/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"v1-migrator/contracts/dependencies/utils/CheckpointsUpgradeable.sol":"CheckpointsUpgradeable"},"evmVersion":"paris","libraries":{}},"sources":{"v1-migrator/contracts/dependencies/utils/CheckpointsUpgradeable.sol":{"keccak256":"0xcaf9d8f03ea1410b5a7923a89830d5fa0b9d8e521c72128a73abab0057d69f52","urls":["bzz-raw://bab3059f969095fd221c0dfe5c806ea4c390d64480fa2c265a28858a2a2bc59e","dweb:/ipfs/Qmbxc8yzpbQ5qAGKv1UNvaAc8UxHrBNPhBRxm7UAzZXbDQ"],"license":"MIT"},"v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol":{"keccak256":"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f","urls":["bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869","dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC"],"license":"MIT"},"v1-migrator/contracts/dependencies/utils/math/SafeCastUpgradeable.sol":{"keccak256":"0x2b99b9d4fd6e581ab6e527ba452ee79a866a607b669c7aadb57660d945412258","urls":["bzz-raw://452864fe0c5f950292ee06eb7d82c2bea858130a85bcf202b450c3c1e8ff86c0","dweb:/ipfs/QmbvcZZtQBfWS6ZZ5Z14g8qWFM2Gmcs52W3dtrsnTuYEin"],"license":"MIT"}},"version":1},"id":139}