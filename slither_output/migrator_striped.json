{
    "success": true,
    "error": null,
    "results": {
        "detectors": [
            {
                "description": "MathUpgradeable.mulDiv(uint256,uint256,uint256) (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) has bitwise-xor operator ^ instead of the exponentiation operator **: \n\t - inverse = (3 * denominator) ^ 2 (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#117)\n",
                "markdown": "[MathUpgradeable.mulDiv(uint256,uint256,uint256)](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L55-L135) has bitwise-xor operator ^ instead of the exponentiation operator **: \n\t - [inverse = (3 * denominator) ^ 2](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L117)\n",
                "id": "45675d200f45ae2c89c506eb2e0688f787d7a3dbe358602d06034e86bb29784f",
                "check": "incorrect-exp",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "MathUpgradeable.mulDiv(uint256,uint256,uint256) (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#102)\n\t- inverse *= 2 - denominator * inverse (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#123)\n",
                "markdown": "[MathUpgradeable.mulDiv(uint256,uint256,uint256)](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L55-L135) performs a multiplication on the result of a division:\n\t- [denominator = denominator / twos](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L102)\n\t- [inverse *= 2 - denominator * inverse](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L123)\n",
                "id": "09c2f38ed8251050026f57ceb3fe8d89496e6ad9c154c95b0e4d41c47fc90821",
                "check": "divide-before-multiply",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "MathUpgradeable.mulDiv(uint256,uint256,uint256) (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#102)\n\t- inverse *= 2 - denominator * inverse (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#121)\n",
                "markdown": "[MathUpgradeable.mulDiv(uint256,uint256,uint256)](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L55-L135) performs a multiplication on the result of a division:\n\t- [denominator = denominator / twos](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L102)\n\t- [inverse *= 2 - denominator * inverse](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L121)\n",
                "id": "38f87e10af983a76968063b271b8a6458d6c16d6577a2ee7a9a668c13a6c2197",
                "check": "divide-before-multiply",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "MathUpgradeable.mulDiv(uint256,uint256,uint256) (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#102)\n\t- inverse = (3 * denominator) ^ 2 (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#117)\n",
                "markdown": "[MathUpgradeable.mulDiv(uint256,uint256,uint256)](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L55-L135) performs a multiplication on the result of a division:\n\t- [denominator = denominator / twos](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L102)\n\t- [inverse = (3 * denominator) ^ 2](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L117)\n",
                "id": "7271852638b5830d1493c36986871a46049988aa65ee4a217ca5fc1ff2a3103f",
                "check": "divide-before-multiply",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "MathUpgradeable.mulDiv(uint256,uint256,uint256) (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#102)\n\t- inverse *= 2 - denominator * inverse (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#122)\n",
                "markdown": "[MathUpgradeable.mulDiv(uint256,uint256,uint256)](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L55-L135) performs a multiplication on the result of a division:\n\t- [denominator = denominator / twos](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L102)\n\t- [inverse *= 2 - denominator * inverse](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L122)\n",
                "id": "836e3f274dee261f3b2834af7de1d15911d1616b96407cd69eb96475d72bb375",
                "check": "divide-before-multiply",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "MathUpgradeable.mulDiv(uint256,uint256,uint256) (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:\n\t- prod0 = prod0 / twos (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#105)\n\t- result = prod0 * inverse (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#132)\n",
                "markdown": "[MathUpgradeable.mulDiv(uint256,uint256,uint256)](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L55-L135) performs a multiplication on the result of a division:\n\t- [prod0 = prod0 / twos](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L105)\n\t- [result = prod0 * inverse](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L132)\n",
                "id": "893ab44f2579687d8b0d8f9ae80cba57c225ef002e26b8240a07424e0e87b086",
                "check": "divide-before-multiply",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "MathUpgradeable.mulDiv(uint256,uint256,uint256) (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#102)\n\t- inverse *= 2 - denominator * inverse (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#124)\n",
                "markdown": "[MathUpgradeable.mulDiv(uint256,uint256,uint256)](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L55-L135) performs a multiplication on the result of a division:\n\t- [denominator = denominator / twos](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L102)\n\t- [inverse *= 2 - denominator * inverse](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L124)\n",
                "id": "8df5deac6c0501d4ebf895b016153c82db9b91ea00a56e3327acc4146b1f16ef",
                "check": "divide-before-multiply",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "MathUpgradeable.mulDiv(uint256,uint256,uint256) (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#102)\n\t- inverse *= 2 - denominator * inverse (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#126)\n",
                "markdown": "[MathUpgradeable.mulDiv(uint256,uint256,uint256)](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L55-L135) performs a multiplication on the result of a division:\n\t- [denominator = denominator / twos](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L102)\n\t- [inverse *= 2 - denominator * inverse](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L126)\n",
                "id": "8ef2cc7e86ee3ba0552fda399f510c59839be9bb99dd70cac888342a8c72db0b",
                "check": "divide-before-multiply",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "MathUpgradeable.mulDiv(uint256,uint256,uint256) (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) performs a multiplication on the result of a division:\n\t- denominator = denominator / twos (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#102)\n\t- inverse *= 2 - denominator * inverse (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#125)\n",
                "markdown": "[MathUpgradeable.mulDiv(uint256,uint256,uint256)](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L55-L135) performs a multiplication on the result of a division:\n\t- [denominator = denominator / twos](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L102)\n\t- [inverse *= 2 - denominator * inverse](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L125)\n",
                "id": "a2c58a75991973738f69c2ec9d924c16f7198a9a11c5f7ab8fae8868b44f363b",
                "check": "divide-before-multiply",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (v1-migrator/contracts/Migrator.sol#218-268):\n\tExternal calls:\n\t- _withdrawOldNFT(Requirements.acre,_acre[i]) (v1-migrator/contracts/Migrator.sol#230)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#232-238)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\t- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (v1-migrator/contracts/Migrator.sol#243)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#245-251)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\tState variables written after the call(s):\n\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#245-251)\n\t\t- lastAssetIdMinted[_nft2] = newLastMintedID (v1-migrator/contracts/Migrator.sol#131)\n\tMigrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#29) can be used in cross function reentrancies:\n\t- Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (v1-migrator/contracts/Migrator.sol#98-133)\n\t- Migrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#29)\n",
                "markdown": "Reentrancy in [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])](v1-migrator/contracts/Migrator.sol#L218-L268):\n\tExternal calls:\n\t- [_withdrawOldNFT(Requirements.acre,_acre[i])](v1-migrator/contracts/Migrator.sol#L230)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L232-L238)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\t- [_withdrawOldNFT(Requirements.plot,_plot[i_scope_0])](v1-migrator/contracts/Migrator.sol#L243)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L245-L251)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\tState variables written after the call(s):\n\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L245-L251)\n\t\t- [lastAssetIdMinted[_nft2] = newLastMintedID](v1-migrator/contracts/Migrator.sol#L131)\n\t[Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L29) can be used in cross function reentrancies:\n\t- [Migrator._mintNewNFT(address,address,address,uint256,uint256[])](v1-migrator/contracts/Migrator.sol#L98-L133)\n\t- [Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L29)\n",
                "id": "51bb47802cc849c11c839c607c10569f9bb8eb569ed0f4ce1772746eb9228316",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (v1-migrator/contracts/Migrator.sol#98-133):\n\tExternal calls:\n\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\tState variables written after the call(s):\n\t- lastAssetIdMinted[_nft2] = newLastMintedID (v1-migrator/contracts/Migrator.sol#131)\n\tMigrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#29) can be used in cross function reentrancies:\n\t- Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (v1-migrator/contracts/Migrator.sol#98-133)\n\t- Migrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#29)\n",
                "markdown": "Reentrancy in [Migrator._mintNewNFT(address,address,address,uint256,uint256[])](v1-migrator/contracts/Migrator.sol#L98-L133):\n\tExternal calls:\n\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\tState variables written after the call(s):\n\t- [lastAssetIdMinted[_nft2] = newLastMintedID](v1-migrator/contracts/Migrator.sol#L131)\n\t[Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L29) can be used in cross function reentrancies:\n\t- [Migrator._mintNewNFT(address,address,address,uint256,uint256[])](v1-migrator/contracts/Migrator.sol#L98-L133)\n\t- [Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L29)\n",
                "id": "6c6bfba4e18dee1271b36ac5603e9425c04624e27293fd501c9fb4794bd658e4",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (v1-migrator/contracts/Migrator.sol#218-268):\n\tExternal calls:\n\t- _withdrawOldNFT(Requirements.acre,_acre[i]) (v1-migrator/contracts/Migrator.sol#230)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#232-238)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\t- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (v1-migrator/contracts/Migrator.sol#243)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#245-251)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\t- _withdrawOldNFT(Requirements.yard,_yard[i_scope_1]) (v1-migrator/contracts/Migrator.sol#256)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (v1-migrator/contracts/Migrator.sol#258-264)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\tState variables written after the call(s):\n\t- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (v1-migrator/contracts/Migrator.sol#258-264)\n\t\t- lastAssetIdMinted[_nft2] = newLastMintedID (v1-migrator/contracts/Migrator.sol#131)\n\tMigrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#29) can be used in cross function reentrancies:\n\t- Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (v1-migrator/contracts/Migrator.sol#98-133)\n\t- Migrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#29)\n",
                "markdown": "Reentrancy in [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])](v1-migrator/contracts/Migrator.sol#L218-L268):\n\tExternal calls:\n\t- [_withdrawOldNFT(Requirements.acre,_acre[i])](v1-migrator/contracts/Migrator.sol#L230)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L232-L238)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\t- [_withdrawOldNFT(Requirements.plot,_plot[i_scope_0])](v1-migrator/contracts/Migrator.sol#L243)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L245-L251)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\t- [_withdrawOldNFT(Requirements.yard,_yard[i_scope_1])](v1-migrator/contracts/Migrator.sol#L256)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard)](v1-migrator/contracts/Migrator.sol#L258-L264)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\tState variables written after the call(s):\n\t- [_mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard)](v1-migrator/contracts/Migrator.sol#L258-L264)\n\t\t- [lastAssetIdMinted[_nft2] = newLastMintedID](v1-migrator/contracts/Migrator.sol#L131)\n\t[Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L29) can be used in cross function reentrancies:\n\t- [Migrator._mintNewNFT(address,address,address,uint256,uint256[])](v1-migrator/contracts/Migrator.sol#L98-L133)\n\t- [Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L29)\n",
                "id": "a29cda68c17cdc7ac1bd101001c0637dc1a5a89bc69a9374e743fa967efbad9c",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._mintNewNFT(address,address,address,uint256,uint256[]).newLastMintedID (v1-migrator/contracts/Migrator.sol#110) is a local variable never initialized\n",
                "markdown": "[Migrator._mintNewNFT(address,address,address,uint256,uint256[]).newLastMintedID](v1-migrator/contracts/Migrator.sol#L110) is a local variable never initialized\n",
                "id": "1625eeb0b1948eaa9cf4109dada9c1aa621373852d27ba641a1b56524583323c",
                "check": "uninitialized-local",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._mintNewNFT(address,address,address,uint256,uint256[]).counter (v1-migrator/contracts/Migrator.sol#111) is a local variable never initialized\n",
                "markdown": "[Migrator._mintNewNFT(address,address,address,uint256,uint256[]).counter](v1-migrator/contracts/Migrator.sol#L111) is a local variable never initialized\n",
                "id": "41c6798e311bdd0fb7a9f04f6828e9412c1c8af06449d6f66671071d163f182d",
                "check": "uninitialized-local",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._mintNewNFT(address,address,address,uint256,uint256[]).quantityMinted (v1-migrator/contracts/Migrator.sol#108) is a local variable never initialized\n",
                "markdown": "[Migrator._mintNewNFT(address,address,address,uint256,uint256[]).quantityMinted](v1-migrator/contracts/Migrator.sol#L108) is a local variable never initialized\n",
                "id": "72a6729c5a13007e385723b53e5c28f4db433d9e7bedcc23a21f307f45acc876",
                "check": "uninitialized-local",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._withdrawOldNFT(address,uint256) (v1-migrator/contracts/Migrator.sol#75-93) has external calls inside a loop: isApproved = ICollectible(_nft1).isApprovedForAll(_msgSender(),address(this)) (v1-migrator/contracts/Migrator.sol#83-86)\n",
                "markdown": "[Migrator._withdrawOldNFT(address,uint256)](v1-migrator/contracts/Migrator.sol#L75-L93) has external calls inside a loop: [isApproved = ICollectible(_nft1).isApprovedForAll(_msgSender(),address(this))](v1-migrator/contracts/Migrator.sol#L83-L86)\n",
                "id": "310446c6f4893a386ec091c67c8cc6386666aacb5c2e5730c19ce284ae6fe22d",
                "check": "calls-loop",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._withdrawOldNFT(address,uint256) (v1-migrator/contracts/Migrator.sol#75-93) has external calls inside a loop: ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n",
                "markdown": "[Migrator._withdrawOldNFT(address,uint256)](v1-migrator/contracts/Migrator.sol#L75-L93) has external calls inside a loop: [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n",
                "id": "d91f7d8ea32b5ca4d9e7ee90f7211da40f844807852e166a4d72698ceef9355c",
                "check": "calls-loop",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._withdrawOldNFT(address,uint256) (v1-migrator/contracts/Migrator.sol#75-93) has external calls inside a loop: isSenderNftOwner = ICollectible(_nft1).ownerOf(_tokenId) (v1-migrator/contracts/Migrator.sol#79)\n",
                "markdown": "[Migrator._withdrawOldNFT(address,uint256)](v1-migrator/contracts/Migrator.sol#L75-L93) has external calls inside a loop: [isSenderNftOwner = ICollectible(_nft1).ownerOf(_tokenId)](v1-migrator/contracts/Migrator.sol#L79)\n",
                "id": "fb23634f174f22cf8367801e8e0b7a97d5bc64a3bd964506c3ea7fc9717ffa28",
                "check": "calls-loop",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateERC20Token(uint256,address,address) (v1-migrator/contracts/Migrator.sol#138-213):\n\tExternal calls:\n\t- success = IERC20Upgradeable(Requirements.tokenV1).transferFrom(_msgSender(),address(this),_amount) (v1-migrator/contracts/Migrator.sol#187-191)\n\t- success = IERC20Upgradeable(Requirements.tokenV2).transfer(_msgSender(),_amount) (v1-migrator/contracts/Migrator.sol#195-198)\n\tState variables written after the call(s):\n\t- tokensMigrated[_token1] += _amount (v1-migrator/contracts/Migrator.sol#202)\n\t- tokensMigrated[_token2] += tokenBToRecieve (v1-migrator/contracts/Migrator.sol#203)\n",
                "markdown": "Reentrancy in [Migrator.migrateERC20Token(uint256,address,address)](v1-migrator/contracts/Migrator.sol#L138-L213):\n\tExternal calls:\n\t- [success = IERC20Upgradeable(Requirements.tokenV1).transferFrom(_msgSender(),address(this),_amount)](v1-migrator/contracts/Migrator.sol#L187-L191)\n\t- [success = IERC20Upgradeable(Requirements.tokenV2).transfer(_msgSender(),_amount)](v1-migrator/contracts/Migrator.sol#L195-L198)\n\tState variables written after the call(s):\n\t- [tokensMigrated[_token1] += _amount](v1-migrator/contracts/Migrator.sol#L202)\n\t- [tokensMigrated[_token2] += tokenBToRecieve](v1-migrator/contracts/Migrator.sol#L203)\n",
                "id": "59bbf240d60d145538e63d939b57d127b16521e7146cf0b791aca7b5592b0b9e",
                "check": "reentrancy-benign",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (v1-migrator/contracts/Migrator.sol#218-268):\n\tExternal calls:\n\t- _withdrawOldNFT(Requirements.acre,_acre[i]) (v1-migrator/contracts/Migrator.sol#230)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#232-238)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\t- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (v1-migrator/contracts/Migrator.sol#243)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#245-251)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\t- _withdrawOldNFT(Requirements.yard,_yard[i_scope_1]) (v1-migrator/contracts/Migrator.sol#256)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (v1-migrator/contracts/Migrator.sol#258-264)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\tEvent emitted after the call(s):\n\t- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (v1-migrator/contracts/Migrator.sol#117-124)\n\t\t- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (v1-migrator/contracts/Migrator.sol#258-264)\n",
                "markdown": "Reentrancy in [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])](v1-migrator/contracts/Migrator.sol#L218-L268):\n\tExternal calls:\n\t- [_withdrawOldNFT(Requirements.acre,_acre[i])](v1-migrator/contracts/Migrator.sol#L230)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L232-L238)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\t- [_withdrawOldNFT(Requirements.plot,_plot[i_scope_0])](v1-migrator/contracts/Migrator.sol#L243)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L245-L251)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\t- [_withdrawOldNFT(Requirements.yard,_yard[i_scope_1])](v1-migrator/contracts/Migrator.sol#L256)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard)](v1-migrator/contracts/Migrator.sol#L258-L264)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\tEvent emitted after the call(s):\n\t- [NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp)](v1-migrator/contracts/Migrator.sol#L117-L124)\n\t\t- [_mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard)](v1-migrator/contracts/Migrator.sol#L258-L264)\n",
                "id": "18ca0f7d8cf402d4a721f3ca591d1dcd517980b48567a8d3007990746a93bee8",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (v1-migrator/contracts/Migrator.sol#98-133):\n\tExternal calls:\n\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\tEvent emitted after the call(s):\n\t- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (v1-migrator/contracts/Migrator.sol#117-124)\n",
                "markdown": "Reentrancy in [Migrator._mintNewNFT(address,address,address,uint256,uint256[])](v1-migrator/contracts/Migrator.sol#L98-L133):\n\tExternal calls:\n\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\tEvent emitted after the call(s):\n\t- [NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp)](v1-migrator/contracts/Migrator.sol#L117-L124)\n",
                "id": "448962662c7924d2c7d03872188baffa43f7ad323e89a58cd4855d96fd035573",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (v1-migrator/contracts/Migrator.sol#218-268):\n\tExternal calls:\n\t- _withdrawOldNFT(Requirements.acre,_acre[i]) (v1-migrator/contracts/Migrator.sol#230)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#232-238)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\t- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (v1-migrator/contracts/Migrator.sol#243)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#245-251)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\tEvent emitted after the call(s):\n\t- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (v1-migrator/contracts/Migrator.sol#117-124)\n\t\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#245-251)\n",
                "markdown": "Reentrancy in [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])](v1-migrator/contracts/Migrator.sol#L218-L268):\n\tExternal calls:\n\t- [_withdrawOldNFT(Requirements.acre,_acre[i])](v1-migrator/contracts/Migrator.sol#L230)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L232-L238)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\t- [_withdrawOldNFT(Requirements.plot,_plot[i_scope_0])](v1-migrator/contracts/Migrator.sol#L243)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L245-L251)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\tEvent emitted after the call(s):\n\t- [NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp)](v1-migrator/contracts/Migrator.sol#L117-L124)\n\t\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L245-L251)\n",
                "id": "47e167f42fae2259ebd2be24f5bd4c52eaa07bf5e926536d807a9ca1f04ef7a2",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateERC20Token(uint256,address,address) (v1-migrator/contracts/Migrator.sol#138-213):\n\tExternal calls:\n\t- success = IERC20Upgradeable(Requirements.tokenV1).transferFrom(_msgSender(),address(this),_amount) (v1-migrator/contracts/Migrator.sol#187-191)\n\t- success = IERC20Upgradeable(Requirements.tokenV2).transfer(_msgSender(),_amount) (v1-migrator/contracts/Migrator.sol#195-198)\n\tEvent emitted after the call(s):\n\t- TokenMigrationCompleted(_msgSender(),Requirements.tokenV1,Requirements.tokenV2,_amount,tokenBToRecieve,block.timestamp) (v1-migrator/contracts/Migrator.sol#204-211)\n",
                "markdown": "Reentrancy in [Migrator.migrateERC20Token(uint256,address,address)](v1-migrator/contracts/Migrator.sol#L138-L213):\n\tExternal calls:\n\t- [success = IERC20Upgradeable(Requirements.tokenV1).transferFrom(_msgSender(),address(this),_amount)](v1-migrator/contracts/Migrator.sol#L187-L191)\n\t- [success = IERC20Upgradeable(Requirements.tokenV2).transfer(_msgSender(),_amount)](v1-migrator/contracts/Migrator.sol#L195-L198)\n\tEvent emitted after the call(s):\n\t- [TokenMigrationCompleted(_msgSender(),Requirements.tokenV1,Requirements.tokenV2,_amount,tokenBToRecieve,block.timestamp)](v1-migrator/contracts/Migrator.sol#L204-L211)\n",
                "id": "c236d5f99f3deebb35aadd4387626d238e90662217f1310d7593e6ef34936b77",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (v1-migrator/contracts/Migrator.sol#218-268):\n\tExternal calls:\n\t- _withdrawOldNFT(Requirements.acre,_acre[i]) (v1-migrator/contracts/Migrator.sol#230)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#90)\n\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#232-238)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#106)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#107)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#115)\n\tEvent emitted after the call(s):\n\t- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (v1-migrator/contracts/Migrator.sol#117-124)\n\t\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#232-238)\n",
                "markdown": "Reentrancy in [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])](v1-migrator/contracts/Migrator.sol#L218-L268):\n\tExternal calls:\n\t- [_withdrawOldNFT(Requirements.acre,_acre[i])](v1-migrator/contracts/Migrator.sol#L230)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L90)\n\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L232-L238)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L106)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L107)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L115)\n\tEvent emitted after the call(s):\n\t- [NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp)](v1-migrator/contracts/Migrator.sol#L117-L124)\n\t\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L232-L238)\n",
                "id": "d39e26c35c41b0de234eb51e8fa4343dab5df655df281c58575849d43f30b18e",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "StringsUpgradeable.toString(uint256) (v1-migrator/contracts/dependencies/utils/StringsUpgradeable.sol#18-38) uses assembly\n\t- INLINE ASM (v1-migrator/contracts/dependencies/utils/StringsUpgradeable.sol#24-26)\n\t- INLINE ASM (v1-migrator/contracts/dependencies/utils/StringsUpgradeable.sol#30-32)\n",
                "markdown": "[StringsUpgradeable.toString(uint256)](v1-migrator/contracts/dependencies/utils/StringsUpgradeable.sol#L18-L38) uses assembly\n\t- [INLINE ASM](v1-migrator/contracts/dependencies/utils/StringsUpgradeable.sol#L24-L26)\n\t- [INLINE ASM](v1-migrator/contracts/dependencies/utils/StringsUpgradeable.sol#L30-L32)\n",
                "id": "51295e0e320f0a27ddb1b665cf55b6bf1224e25f6234e88e253a037a9b3df18a",
                "check": "assembly",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "MathUpgradeable.mulDiv(uint256,uint256,uint256) (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#55-135) uses assembly\n\t- INLINE ASM (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#66-70)\n\t- INLINE ASM (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#86-93)\n\t- INLINE ASM (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#100-109)\n",
                "markdown": "[MathUpgradeable.mulDiv(uint256,uint256,uint256)](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L55-L135) uses assembly\n\t- [INLINE ASM](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L66-L70)\n\t- [INLINE ASM](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L86-L93)\n\t- [INLINE ASM](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L100-L109)\n",
                "id": "8ff7014282ac08b13dfa2964c1f04c1aaae3a9aefe66d763fe1844d619166daa",
                "check": "assembly",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "AddressUpgradeable._revert(bytes,string) (v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#206-218) uses assembly\n\t- INLINE ASM (v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#211-214)\n",
                "markdown": "[AddressUpgradeable._revert(bytes,string)](v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#L206-L218) uses assembly\n\t- [INLINE ASM](v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#L211-L214)\n",
                "id": "bf40cb7a3665b91ce8592a0fc861f3066c55c1b09b2bcda7ca0660617b5f7a1a",
                "check": "assembly",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "4 different versions of Solidity are used:\n\t- Version constraint ^0.8.4 is used by:\n\t\t-^0.8.4 (v1-migrator/contracts/Migrator.sol#2)\n\t\t-^0.8.4 (v1-migrator/contracts/interfaces/ICollectible.sol#2)\n\t\t-^0.8.4 (v1-migrator/contracts/interfaces/IERC721Receiver.sol#2)\n\t- Version constraint ^0.8.0 is used by:\n\t\t-^0.8.0 (v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#4)\n\t\t-^0.8.0 (v1-migrator/contracts/dependencies/access/IAccessControlUpgradeable.sol#4)\n\t\t-^0.8.0 (v1-migrator/contracts/dependencies/token/ERC20/IERC20Upgradeable.sol#4)\n\t\t-^0.8.0 (v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#4)\n\t\t-^0.8.0 (v1-migrator/contracts/dependencies/utils/StringsUpgradeable.sol#4)\n\t\t-^0.8.0 (v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#4)\n\t\t-^0.8.0 (v1-migrator/contracts/dependencies/utils/introspection/IERC165Upgradeable.sol#4)\n\t\t-^0.8.0 (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#4)\n\t\t-^0.8.0 (v1-migrator/contracts/dependencies/utils/math/SafeMathUpgradeable.sol#4)\n\t- Version constraint ^0.8.2 is used by:\n\t\t-^0.8.2 (v1-migrator/contracts/dependencies/proxy/utils/Initializable.sol#4)\n\t- Version constraint ^0.8.1 is used by:\n\t\t-^0.8.1 (v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#4)\n",
                "markdown": "4 different versions of Solidity are used:\n\t- Version constraint ^0.8.4 is used by:\n\t\t-[^0.8.4](v1-migrator/contracts/Migrator.sol#L2)\n\t\t-[^0.8.4](v1-migrator/contracts/interfaces/ICollectible.sol#L2)\n\t\t-[^0.8.4](v1-migrator/contracts/interfaces/IERC721Receiver.sol#L2)\n\t- Version constraint ^0.8.0 is used by:\n\t\t-[^0.8.0](v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#L4)\n\t\t-[^0.8.0](v1-migrator/contracts/dependencies/access/IAccessControlUpgradeable.sol#L4)\n\t\t-[^0.8.0](v1-migrator/contracts/dependencies/token/ERC20/IERC20Upgradeable.sol#L4)\n\t\t-[^0.8.0](v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#L4)\n\t\t-[^0.8.0](v1-migrator/contracts/dependencies/utils/StringsUpgradeable.sol#L4)\n\t\t-[^0.8.0](v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#L4)\n\t\t-[^0.8.0](v1-migrator/contracts/dependencies/utils/introspection/IERC165Upgradeable.sol#L4)\n\t\t-[^0.8.0](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L4)\n\t\t-[^0.8.0](v1-migrator/contracts/dependencies/utils/math/SafeMathUpgradeable.sol#L4)\n\t- Version constraint ^0.8.2 is used by:\n\t\t-[^0.8.2](v1-migrator/contracts/dependencies/proxy/utils/Initializable.sol#L4)\n\t- Version constraint ^0.8.1 is used by:\n\t\t-[^0.8.1](v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#L4)\n",
                "id": "fe84c8f2082bc3fb8a3a8dfb77909150f05a90576d8a7e60c2d868a404f24a01",
                "check": "pragma",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "ContextUpgradeable._msgData() (v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#27-29) is never used and should be removed\n",
                "markdown": "[ContextUpgradeable._msgData()](v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#L27-L29) is never used and should be removed\n",
                "id": "02eb5fa8bc443e8ef6d472768ccb878372a2bbd91aef90382437aadf2d06cdd0",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "Initializable._isInitializing() (v1-migrator/contracts/dependencies/proxy/utils/Initializable.sol#162-164) is never used and should be removed\n",
                "markdown": "[Initializable._isInitializing()](v1-migrator/contracts/dependencies/proxy/utils/Initializable.sol#L162-L164) is never used and should be removed\n",
                "id": "0452b3df4b35b1b064cd022e8c386577836b77074c5117cf1967f26b72ef458c",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "AccessControlUpgradeable.__AccessControl_init() (v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#51-52) is never used and should be removed\n",
                "markdown": "[AccessControlUpgradeable.__AccessControl_init()](v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#L51-L52) is never used and should be removed\n",
                "id": "33e2d65bb087d861303b3d42ca072b5ed673118f6dc0e2857d46e845b9ac0e1d",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ContextUpgradeable.__Context_init_unchained() (v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#21-22) is never used and should be removed\n",
                "markdown": "[ContextUpgradeable.__Context_init_unchained()](v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#L21-L22) is never used and should be removed\n",
                "id": "49a89bcb03ac9f03dee56bf5471683c1052698dfd8bb7bd434a220e91e98f8a5",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ERC165Upgradeable.__ERC165_init_unchained() (v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#27-28) is never used and should be removed\n",
                "markdown": "[ERC165Upgradeable.__ERC165_init_unchained()](v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#L27-L28) is never used and should be removed\n",
                "id": "4cfd1da74c68421652d732992c7e6629043cd4432c37e137012a1b82384b964d",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "AccessControlUpgradeable._setRoleAdmin(bytes32,bytes32) (v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#220-224) is never used and should be removed\n",
                "markdown": "[AccessControlUpgradeable._setRoleAdmin(bytes32,bytes32)](v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#L220-L224) is never used and should be removed\n",
                "id": "8c2c3fb0ccb5985ced8e93431215a12fcf45fe0a733fdd2da26f73fe706d7e8c",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ERC165Upgradeable.__ERC165_init() (v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#24-25) is never used and should be removed\n",
                "markdown": "[ERC165Upgradeable.__ERC165_init()](v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#L24-L25) is never used and should be removed\n",
                "id": "9b0b2ebba288877d46b610dd1a9dfdcc69ad5e2287bc0f70f19a2d61a31ee9e5",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "AccessControlUpgradeable.__AccessControl_init_unchained() (v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#54-55) is never used and should be removed\n",
                "markdown": "[AccessControlUpgradeable.__AccessControl_init_unchained()](v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#L54-L55) is never used and should be removed\n",
                "id": "bfe68eab0d18ea802da36f6789764877f76ba9908bacb1a95e3a7de9c3cd321a",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "Initializable._getInitializedVersion() (v1-migrator/contracts/dependencies/proxy/utils/Initializable.sol#155-157) is never used and should be removed\n",
                "markdown": "[Initializable._getInitializedVersion()](v1-migrator/contracts/dependencies/proxy/utils/Initializable.sol#L155-L157) is never used and should be removed\n",
                "id": "c08d7be4b407d22e4451a143fa4042d32225368689a3638ea9cf7af2856c9eca",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "Initializable._disableInitializers() (v1-migrator/contracts/dependencies/proxy/utils/Initializable.sol#144-150) is never used and should be removed\n",
                "markdown": "[Initializable._disableInitializers()](v1-migrator/contracts/dependencies/proxy/utils/Initializable.sol#L144-L150) is never used and should be removed\n",
                "id": "dc2bed4bc2b5ab49fa436151b5fa17db48c2c63cc7e3fb5c6f7919c1c5b432a2",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ContextUpgradeable.__Context_init() (v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#18-19) is never used and should be removed\n",
                "markdown": "[ContextUpgradeable.__Context_init()](v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#L18-L19) is never used and should be removed\n",
                "id": "f8756cda3906aea199f438b412085d8a48f5b42cdbb60790de057f6bbef6eaaa",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "Version constraint ^0.8.1 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)\n\t- FullInlinerNonExpressionSplitArgumentEvaluationOrder\n\t- MissingSideEffectsOnSelectorAccess\n\t- AbiReencodingHeadOverflowWithStaticArrayCleanup\n\t- DirtyBytesArrayToStorage\n\t- DataLocationChangeInInternalOverride\n\t- NestedCalldataArrayAbiReencodingSizeValidation\n\t- SignedImmutables\n\t- ABIDecodeTwoDimensionalArrayMemory\n\t- KeccakCaching.\nIt is used by:\n\t- ^0.8.1 (v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#4)\n",
                "markdown": "Version constraint ^0.8.1 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)\n\t- FullInlinerNonExpressionSplitArgumentEvaluationOrder\n\t- MissingSideEffectsOnSelectorAccess\n\t- AbiReencodingHeadOverflowWithStaticArrayCleanup\n\t- DirtyBytesArrayToStorage\n\t- DataLocationChangeInInternalOverride\n\t- NestedCalldataArrayAbiReencodingSizeValidation\n\t- SignedImmutables\n\t- ABIDecodeTwoDimensionalArrayMemory\n\t- KeccakCaching.\nIt is used by:\n\t- [^0.8.1](v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#L4)\n",
                "id": "31039aa58a2f63b2a71860228bd7526a1523ecb813c1f2ac767be525fc6f9c6f",
                "check": "solc-version",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Version constraint ^0.8.4 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)\n\t- FullInlinerNonExpressionSplitArgumentEvaluationOrder\n\t- MissingSideEffectsOnSelectorAccess\n\t- AbiReencodingHeadOverflowWithStaticArrayCleanup\n\t- DirtyBytesArrayToStorage\n\t- DataLocationChangeInInternalOverride\n\t- NestedCalldataArrayAbiReencodingSizeValidation\n\t- SignedImmutables.\nIt is used by:\n\t- ^0.8.4 (v1-migrator/contracts/Migrator.sol#2)\n\t- ^0.8.4 (v1-migrator/contracts/interfaces/ICollectible.sol#2)\n\t- ^0.8.4 (v1-migrator/contracts/interfaces/IERC721Receiver.sol#2)\n",
                "markdown": "Version constraint ^0.8.4 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)\n\t- FullInlinerNonExpressionSplitArgumentEvaluationOrder\n\t- MissingSideEffectsOnSelectorAccess\n\t- AbiReencodingHeadOverflowWithStaticArrayCleanup\n\t- DirtyBytesArrayToStorage\n\t- DataLocationChangeInInternalOverride\n\t- NestedCalldataArrayAbiReencodingSizeValidation\n\t- SignedImmutables.\nIt is used by:\n\t- [^0.8.4](v1-migrator/contracts/Migrator.sol#L2)\n\t- [^0.8.4](v1-migrator/contracts/interfaces/ICollectible.sol#L2)\n\t- [^0.8.4](v1-migrator/contracts/interfaces/IERC721Receiver.sol#L2)\n",
                "id": "32aa7c65d1b9b3c27ddcdbdfd85be4b3ab1aa6fada2952986f01129e1f466a7b",
                "check": "solc-version",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Version constraint ^0.8.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)\n\t- FullInlinerNonExpressionSplitArgumentEvaluationOrder\n\t- MissingSideEffectsOnSelectorAccess\n\t- AbiReencodingHeadOverflowWithStaticArrayCleanup\n\t- DirtyBytesArrayToStorage\n\t- DataLocationChangeInInternalOverride\n\t- NestedCalldataArrayAbiReencodingSizeValidation\n\t- SignedImmutables\n\t- ABIDecodeTwoDimensionalArrayMemory\n\t- KeccakCaching.\nIt is used by:\n\t- ^0.8.2 (v1-migrator/contracts/dependencies/proxy/utils/Initializable.sol#4)\n",
                "markdown": "Version constraint ^0.8.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)\n\t- FullInlinerNonExpressionSplitArgumentEvaluationOrder\n\t- MissingSideEffectsOnSelectorAccess\n\t- AbiReencodingHeadOverflowWithStaticArrayCleanup\n\t- DirtyBytesArrayToStorage\n\t- DataLocationChangeInInternalOverride\n\t- NestedCalldataArrayAbiReencodingSizeValidation\n\t- SignedImmutables\n\t- ABIDecodeTwoDimensionalArrayMemory\n\t- KeccakCaching.\nIt is used by:\n\t- [^0.8.2](v1-migrator/contracts/dependencies/proxy/utils/Initializable.sol#L4)\n",
                "id": "c88b0b486768b2353d33268247e63d5fe62a3f471bae9e69e910cf469381c560",
                "check": "solc-version",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)\n\t- FullInlinerNonExpressionSplitArgumentEvaluationOrder\n\t- MissingSideEffectsOnSelectorAccess\n\t- AbiReencodingHeadOverflowWithStaticArrayCleanup\n\t- DirtyBytesArrayToStorage\n\t- DataLocationChangeInInternalOverride\n\t- NestedCalldataArrayAbiReencodingSizeValidation\n\t- SignedImmutables\n\t- ABIDecodeTwoDimensionalArrayMemory\n\t- KeccakCaching.\nIt is used by:\n\t- ^0.8.0 (v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#4)\n\t- ^0.8.0 (v1-migrator/contracts/dependencies/access/IAccessControlUpgradeable.sol#4)\n\t- ^0.8.0 (v1-migrator/contracts/dependencies/token/ERC20/IERC20Upgradeable.sol#4)\n\t- ^0.8.0 (v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#4)\n\t- ^0.8.0 (v1-migrator/contracts/dependencies/utils/StringsUpgradeable.sol#4)\n\t- ^0.8.0 (v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#4)\n\t- ^0.8.0 (v1-migrator/contracts/dependencies/utils/introspection/IERC165Upgradeable.sol#4)\n\t- ^0.8.0 (v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#4)\n\t- ^0.8.0 (v1-migrator/contracts/dependencies/utils/math/SafeMathUpgradeable.sol#4)\n",
                "markdown": "Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)\n\t- FullInlinerNonExpressionSplitArgumentEvaluationOrder\n\t- MissingSideEffectsOnSelectorAccess\n\t- AbiReencodingHeadOverflowWithStaticArrayCleanup\n\t- DirtyBytesArrayToStorage\n\t- DataLocationChangeInInternalOverride\n\t- NestedCalldataArrayAbiReencodingSizeValidation\n\t- SignedImmutables\n\t- ABIDecodeTwoDimensionalArrayMemory\n\t- KeccakCaching.\nIt is used by:\n\t- [^0.8.0](v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#L4)\n\t- [^0.8.0](v1-migrator/contracts/dependencies/access/IAccessControlUpgradeable.sol#L4)\n\t- [^0.8.0](v1-migrator/contracts/dependencies/token/ERC20/IERC20Upgradeable.sol#L4)\n\t- [^0.8.0](v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#L4)\n\t- [^0.8.0](v1-migrator/contracts/dependencies/utils/StringsUpgradeable.sol#L4)\n\t- [^0.8.0](v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#L4)\n\t- [^0.8.0](v1-migrator/contracts/dependencies/utils/introspection/IERC165Upgradeable.sol#L4)\n\t- [^0.8.0](v1-migrator/contracts/dependencies/utils/math/MathUpgradeable.sol#L4)\n\t- [^0.8.0](v1-migrator/contracts/dependencies/utils/math/SafeMathUpgradeable.sol#L4)\n",
                "id": "f53d88b93aff0f4d902d2dfb5faceb2bb572f17905ac6015dce2b8894ef1e0a9",
                "check": "solc-version",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#155-162):\n\t- (success,returndata) = target.staticcall(data) (v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#160)\n",
                "markdown": "Low level call in [AddressUpgradeable.functionStaticCall(address,bytes,string)](v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#L155-L162):\n\t- [(success,returndata) = target.staticcall(data)](v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#L160)\n",
                "id": "0f0bc0dbe5470d7f6c3bfd555f04f98184a4e97cd9a331f46a11f91df00e429f",
                "check": "low-level-calls",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Low level call in AddressUpgradeable.sendValue(address,uint256) (v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#60-65):\n\t- (success,None) = recipient.call{value: amount}() (v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#63)\n",
                "markdown": "Low level call in [AddressUpgradeable.sendValue(address,uint256)](v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#L60-L65):\n\t- [(success,None) = recipient.call{value: amount}()](v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#L63)\n",
                "id": "53d9abb1a837deeb28b1b4edfd981a5351a60979f05d3adeaee3ed0a18d1e931",
                "check": "low-level-calls",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#128-137):\n\t- (success,returndata) = target.call{value: value}(data) (v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#135)\n",
                "markdown": "Low level call in [AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string)](v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#L128-L137):\n\t- [(success,returndata) = target.call{value: value}(data)](v1-migrator/contracts/dependencies/utils/AddressUpgradeable.sol#L135)\n",
                "id": "ae8f628da1b84869eb5ee50e90a6feb989c794b111c2ffadcb5718ceeb67093a",
                "check": "low-level-calls",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setTokenInfo(address,address,uint256)._price (v1-migrator/contracts/Migrator.sol#330) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setTokenInfo(address,address,uint256)._price](v1-migrator/contracts/Migrator.sol#L330) is not in mixedCase\n",
                "id": "08f49b8a921146ce1a1ae0cdadf5388aefb09b722becca7a43e0b69b0a730a2a",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._acre (v1-migrator/contracts/Migrator.sol#289) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._acre](v1-migrator/contracts/Migrator.sol#L289) is not in mixedCase\n",
                "id": "1e49ca332ff2a5d552a375f7ef6315ba6ac15368817ae14fff5770f5a6863f0d",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Function AccessControlUpgradeable.__AccessControl_init_unchained() (v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#54-55) is not in mixedCase\n",
                "markdown": "Function [AccessControlUpgradeable.__AccessControl_init_unchained()](v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#L54-L55) is not in mixedCase\n",
                "id": "226e7d5af64c132f41abf0df79c0723e2a9ee53e2961f745732ce61ab1360dbe",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateERC20Token(uint256,address,address)._token2 (v1-migrator/contracts/Migrator.sol#141) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateERC20Token(uint256,address,address)._token2](v1-migrator/contracts/Migrator.sol#L141) is not in mixedCase\n",
                "id": "2938f813bddb05fab40a6430e3bc5f261c142889cc63cc2bd0f6d8432d5b7165",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateERC20Token(uint256,address,address)._token1 (v1-migrator/contracts/Migrator.sol#140) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateERC20Token(uint256,address,address)._token1](v1-migrator/contracts/Migrator.sol#L140) is not in mixedCase\n",
                "id": "2a018ee34dc95cd1860b08ee4f870f1b581351e51b591bc99745aa4e7838025a",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._acre (v1-migrator/contracts/Migrator.sol#219) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._acre](v1-migrator/contracts/Migrator.sol#L219) is not in mixedCase\n",
                "id": "2ed0b02164d046d3102bb61d6ea2fd8ce7b7b687388df0b29161b9698f93e12c",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ContextUpgradeable.__gap (v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#36) is not in mixedCase\n",
                "markdown": "Variable [ContextUpgradeable.__gap](v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#L36) is not in mixedCase\n",
                "id": "36b0d7790b5ec0201a99f98a2f3b1afbd4248739c34889d0a9d08876f3462218",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._plotV2 (v1-migrator/contracts/Migrator.sol#294) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._plotV2](v1-migrator/contracts/Migrator.sol#L294) is not in mixedCase\n",
                "id": "3bfdf12fb8243eb40e4e860d7d9f798551fb41194a791d5546d9bac8f2c10100",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable AccessControlUpgradeable.__gap (v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#259) is not in mixedCase\n",
                "markdown": "Variable [AccessControlUpgradeable.__gap](v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#L259) is not in mixedCase\n",
                "id": "408a5a92ce9ee8bac5e964324c5e93c944b47606ce29c3515b4b54a7b28f372d",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setTokenInfo(address,address,uint256)._tokenV1 (v1-migrator/contracts/Migrator.sol#328) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setTokenInfo(address,address,uint256)._tokenV1](v1-migrator/contracts/Migrator.sol#L328) is not in mixedCase\n",
                "id": "43a571f8d41c1337f2041b4bf1049182507fe0d84eb358f90811257f1c6cd38b",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._plot (v1-migrator/contracts/Migrator.sol#220) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._plot](v1-migrator/contracts/Migrator.sol#L220) is not in mixedCase\n",
                "id": "60a03f312a4e8cf0f4a1ae27c6f84cbec4587a94313d73f6045261e9e6160801",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateERC20Token(uint256,address,address)._amount (v1-migrator/contracts/Migrator.sol#139) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateERC20Token(uint256,address,address)._amount](v1-migrator/contracts/Migrator.sol#L139) is not in mixedCase\n",
                "id": "695a43c746c507fd86163db5cacc386efa4894db566b73e338d0b19da5effbf8",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._plot (v1-migrator/contracts/Migrator.sol#291) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._plot](v1-migrator/contracts/Migrator.sol#L291) is not in mixedCase\n",
                "id": "6b362bc6f285aeabda6ace55b63bb3d53b77ca94e85020b9f166058b700b3f0c",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Function ERC165Upgradeable.__ERC165_init_unchained() (v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#27-28) is not in mixedCase\n",
                "markdown": "Function [ERC165Upgradeable.__ERC165_init_unchained()](v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#L27-L28) is not in mixedCase\n",
                "id": "85d4e6d503145e70d4f27b51c03c2aecc7efa120329a4cf27b34d33cd9a2c942",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Function ContextUpgradeable.__Context_init_unchained() (v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#21-22) is not in mixedCase\n",
                "markdown": "Function [ContextUpgradeable.__Context_init_unchained()](v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#L21-L22) is not in mixedCase\n",
                "id": "8629c89abc9e568d22212182eb038287fc4f676ff34add41294173d644b25bcb",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._acreV2 (v1-migrator/contracts/Migrator.sol#292) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._acreV2](v1-migrator/contracts/Migrator.sol#L292) is not in mixedCase\n",
                "id": "9405a9ebd1d60c4689cab0777d96a8f0c4ab6a2c7dd6ad71ae2fcf353c2a2fca",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._yard (v1-migrator/contracts/Migrator.sol#290) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._yard](v1-migrator/contracts/Migrator.sol#L290) is not in mixedCase\n",
                "id": "a2bafacda2e79ef5ffbece37ee3faeb17f62806e2ac21996af932b136572c140",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Function AccessControlUpgradeable.__AccessControl_init() (v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#51-52) is not in mixedCase\n",
                "markdown": "Function [AccessControlUpgradeable.__AccessControl_init()](v1-migrator/contracts/dependencies/access/AccessControlUpgradeable.sol#L51-L52) is not in mixedCase\n",
                "id": "a333fa38b5f96027543bfa2131aac6765059644ab6c7dae2f8d357b5fbaa2f2b",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setTokenInfo(address,address,uint256)._tokenV2 (v1-migrator/contracts/Migrator.sol#329) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setTokenInfo(address,address,uint256)._tokenV2](v1-migrator/contracts/Migrator.sol#L329) is not in mixedCase\n",
                "id": "b5a09f5c2bef8a8443c059c08c670410cdb05a239d9048bcbbbd76cd2c2779d3",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ERC165Upgradeable.__gap (v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#41) is not in mixedCase\n",
                "markdown": "Variable [ERC165Upgradeable.__gap](v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#L41) is not in mixedCase\n",
                "id": "bdc2d8e808ddb749222cd3ed859af1782e2e982c72c8164d541233f50dec05af",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._yardV2 (v1-migrator/contracts/Migrator.sol#293) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._yardV2](v1-migrator/contracts/Migrator.sol#L293) is not in mixedCase\n",
                "id": "bf525fe333dcb495a02db32205a72890b190b5abc30a40caf6598f773ef966dc",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._yard (v1-migrator/contracts/Migrator.sol#221) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._yard](v1-migrator/contracts/Migrator.sol#L221) is not in mixedCase\n",
                "id": "da0c1f5291c5602935e04cda550fd1e42b4367d6918d4e48b21c56a6a2b8a491",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable Migrator.Requirements (v1-migrator/contracts/Migrator.sol#28) is not in mixedCase\n",
                "markdown": "Variable [Migrator.Requirements](v1-migrator/contracts/Migrator.sol#L28) is not in mixedCase\n",
                "id": "e5af3b179e315e0492b23c5c93e5b700c5b5fd0ee4760cfafd8907883c35f8f6",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Function ContextUpgradeable.__Context_init() (v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#18-19) is not in mixedCase\n",
                "markdown": "Function [ContextUpgradeable.__Context_init()](v1-migrator/contracts/dependencies/utils/ContextUpgradeable.sol#L18-L19) is not in mixedCase\n",
                "id": "ec47067e22967ab37ddb79c5eae4c225b0c9f1e4e15f1452db70b0a6f86103e0",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Function ERC165Upgradeable.__ERC165_init() (v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#24-25) is not in mixedCase\n",
                "markdown": "Function [ERC165Upgradeable.__ERC165_init()](v1-migrator/contracts/dependencies/utils/introspection/ERC165Upgradeable.sol#L24-L25) is not in mixedCase\n",
                "id": "f226b70c0c428d938e421293c43b68d973d744168b94b568e0deb7b189c26f50",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Migrator.totalAcreMigrated (v1-migrator/contracts/Migrator.sol#32) should be constant \n",
                "markdown": "[Migrator.totalAcreMigrated](v1-migrator/contracts/Migrator.sol#L32) should be constant \n",
                "id": "225b40bcb2b3aab259f35fc27d2f0486f6f330738f49516b4ae3bc333dd6d6d9",
                "check": "constable-states",
                "impact": "Optimization",
                "confidence": "High"
            },
            {
                "description": "Migrator.totalYardMigrated (v1-migrator/contracts/Migrator.sol#34) should be constant \n",
                "markdown": "[Migrator.totalYardMigrated](v1-migrator/contracts/Migrator.sol#L34) should be constant \n",
                "id": "6d353ccf8c0d806a047f51a50f459bf5d98608857b59f2c2bb0a7bca309f539a",
                "check": "constable-states",
                "impact": "Optimization",
                "confidence": "High"
            },
            {
                "description": "Migrator.totalPlotMigrated (v1-migrator/contracts/Migrator.sol#33) should be constant \n",
                "markdown": "[Migrator.totalPlotMigrated](v1-migrator/contracts/Migrator.sol#L33) should be constant \n",
                "id": "ca50228f1cceea4727d85850ce5414c05c0b08a5016e77bc52bb383c42a93ed2",
                "check": "constable-states",
                "impact": "Optimization",
                "confidence": "High"
            }
        ]
    }
}