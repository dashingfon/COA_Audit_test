{
    "success": true,
    "error": null,
    "results": {
        "detectors": [
            {
                "description": "ATLYARD._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#66-73) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#71-72)\n",
                "markdown": "[ATLYARD._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L66-L73) uses arbitrary from in transferFrom: [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L71-L72)\n",
                "id": "108c8a68a450c1569e4b896e43addc0118d7d3bab257a26c8f4971203e9c7465",
                "check": "arbitrary-send-erc20",
                "impact": "High",
                "confidence": "High"
            },
            {
                "description": "PLOT._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#109-116) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#115-116)\n",
                "markdown": "[PLOT._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L109-L116) uses arbitrary from in transferFrom: [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L115-L116)\n",
                "id": "4ab1d8229b0f2480ff93cb1e2999d863f5cdf45cecaa27415a3bf5cb86568aa3",
                "check": "arbitrary-send-erc20",
                "impact": "High",
                "confidence": "High"
            },
            {
                "description": "ACRE._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#108-115) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#114-115)\n",
                "markdown": "[ACRE._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L108-L115) uses arbitrary from in transferFrom: [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L114-L115)\n",
                "id": "5cdf198f5cc073ccfd9db3049e1e55dc46dfe7319d31b9f6b1b444b4e009e5ae",
                "check": "arbitrary-send-erc20",
                "impact": "High",
                "confidence": "High"
            },
            {
                "description": "ATLPLOT._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#61-68) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#66-67)\n",
                "markdown": "[ATLPLOT._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L61-L68) uses arbitrary from in transferFrom: [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L66-L67)\n",
                "id": "7b33d4e1abbe420db39f542a061baa0cbe7f00791cd9d248fefe2c8f3a80de90",
                "check": "arbitrary-send-erc20",
                "impact": "High",
                "confidence": "High"
            },
            {
                "description": "ATLACRE._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#67-74) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#72-73)\n",
                "markdown": "[ATLACRE._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L67-L74) uses arbitrary from in transferFrom: [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L72-L73)\n",
                "id": "eb117c61038b3f37b8b0519e83bd23590afa462af9550cc2471e1e3c22f12bc7",
                "check": "arbitrary-send-erc20",
                "impact": "High",
                "confidence": "High"
            },
            {
                "description": "YARD._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#113-120) uses arbitrary from in transferFrom: token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#119-120)\n",
                "markdown": "[YARD._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L113-L120) uses arbitrary from in transferFrom: [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L119-L120)\n",
                "id": "fb31cbbe39c41a32d2b97b5bd5566fe5315ff599c7bbc685f33ef99ac5b4369b",
                "check": "arbitrary-send-erc20",
                "impact": "High",
                "confidence": "High"
            },
            {
                "description": "ATLPLOT._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#49-61) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#56-60)\n",
                "markdown": "[ATLPLOT._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L49-L61) ignores return value by [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L56-L60)\n",
                "id": "016232e1f86260427800c377d7fd326635a746cf25389225af713f484a97fda8",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "PLOT._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#98-108) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#105-107)\n",
                "markdown": "[PLOT._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L98-L108) ignores return value by [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L105-L107)\n",
                "id": "4385f169deb37dd556c49db6439619974174ab66aa25894a4a8769454e4b5b34",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "ATLPLOT._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#61-68) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#66-67)\n",
                "markdown": "[ATLPLOT._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L61-L68) ignores return value by [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L66-L67)\n",
                "id": "445afbd72fccfe09459b59c70168d53426487a9d82fe75e849161f58307daf76",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "YARD._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#113-120) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#119-120)\n",
                "markdown": "[YARD._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L113-L120) ignores return value by [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L119-L120)\n",
                "id": "610d82d799ade0587089e2ae6211a5054f71ca05aa4c98264c34a3276e38bc3e",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "PLOT._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#109-116) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#115-116)\n",
                "markdown": "[PLOT._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L109-L116) ignores return value by [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L115-L116)\n",
                "id": "618f5d367f0b5f5d7801da5ae745c8373e526c1c6ae9236e38c226dca6545acd",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "ATLYARD._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#66-73) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#71-72)\n",
                "markdown": "[ATLYARD._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L66-L73) ignores return value by [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L71-L72)\n",
                "id": "6cefae8b6891f4573c1a930279800818c1b461184f28d22dde9b545f6c5ee676",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "ATLACRE._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#67-74) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#72-73)\n",
                "markdown": "[ATLACRE._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L67-L74) ignores return value by [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L72-L73)\n",
                "id": "6d8f9130aff7515526edc073ff0c4adc14c70e73a01a330fccb4ff5e629add7d",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "ACRE._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#97-108) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#104-106)\n",
                "markdown": "[ACRE._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L97-L108) ignores return value by [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L104-L106)\n",
                "id": "97593967ba87585457ea1db6406130137024fa127294b4fa3269a4de9ca776ab",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "YARD._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#101-112) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#107-111)\n",
                "markdown": "[YARD._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L101-L112) ignores return value by [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L107-L111)\n",
                "id": "a6ca7d5c235ea55c9a47e05365ad8509296546459eeb4957c7c954b514441fde",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "ATLACRE._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#53-67) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#62-66)\n",
                "markdown": "[ATLACRE._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L53-L67) ignores return value by [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L62-L66)\n",
                "id": "ac4f16126be9c901bc283269eac30dcc8c1732f906e84a53f32753428600524a",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "ATLYARD._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#53-66) ignores return value by token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#61-65)\n",
                "markdown": "[ATLYARD._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L53-L66) ignores return value by [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L61-L65)\n",
                "id": "b0918ae881c17f78ab88ba65f95c9fcf3cd4715b4f7cb4f4d2626942375737ae",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "ACRE._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#108-115) ignores return value by token.transferFrom(payee,_feeCollector,_txFeeAmount) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#114-115)\n",
                "markdown": "[ACRE._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L108-L115) ignores return value by [token.transferFrom(payee,_feeCollector,_txFeeAmount)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L114-L115)\n",
                "id": "ba12bb6ad78ad1ae4edccacf405e9c53303d668267f603a4fc955faa206cbef7",
                "check": "unchecked-transfer",
                "impact": "High",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in PLOT.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#71-98):\n\tExternal calls:\n\t- ! _pay(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#90-91)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#105-107)\n\tState variables written after the call(s):\n\t- _currentBatch.quantity = (_currentBatch.quantity - quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#93-97)\n\tPLOT._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#29-30) can be used in cross function reentrancies:\n\t- PLOT._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#29-30)\n\t- PLOT._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#98-108)\n\t- PLOT.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#71-98)\n\t- PLOT.mintAsFreeMinter(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#165-189)\n\t- PLOT.setCurrentBatch(uint256,uint256,bool) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#116-134)\n\t- PLOT.setCurrentBatchActive(bool) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#134-137)\n",
                "markdown": "Reentrancy in [PLOT.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L71-L98):\n\tExternal calls:\n\t- [! _pay(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L90-L91)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L105-L107)\n\tState variables written after the call(s):\n\t- [_currentBatch.quantity = (_currentBatch.quantity - quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L93-L97)\n\t[PLOT._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L29-L30) can be used in cross function reentrancies:\n\t- [PLOT._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L29-L30)\n\t- [PLOT._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L98-L108)\n\t- [PLOT.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L71-L98)\n\t- [PLOT.mintAsFreeMinter(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L165-L189)\n\t- [PLOT.setCurrentBatch(uint256,uint256,bool)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L116-L134)\n\t- [PLOT.setCurrentBatchActive(bool)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L134-L137)\n",
                "id": "1284fb5e57ade5633752f2ccaacd35e61c75e0176a8a20b4eb4bc939c72ba79c",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ERC721A._mint(address,uint256,bytes,bool) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#427-481):\n\tExternal calls:\n\t- ! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#462-467)\n\t\t- retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#635-648)\n\tState variables written after the call(s):\n\t- _currentIndex = updatedIndex (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#478-479)\n\tERC721A._currentIndex (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#76-80) can be used in cross function reentrancies:\n\t- ERC721A.ERC721A_Initialize(string,string) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#102-107)\n\t- ERC721A._exists(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#395-402)\n\t- ERC721A._transfer(address,address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#488-539)\n\t- ERC721A.ownershipOf(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#199-225)\n\t- ERC721A.totalSupply() (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#122-127)\n",
                "markdown": "Reentrancy in [ERC721A._mint(address,uint256,bytes,bool)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L427-L481):\n\tExternal calls:\n\t- [! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L462-L467)\n\t\t- [retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L635-L648)\n\tState variables written after the call(s):\n\t- [_currentIndex = updatedIndex](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L478-L479)\n\t[ERC721A._currentIndex](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L76-L80) can be used in cross function reentrancies:\n\t- [ERC721A.ERC721A_Initialize(string,string)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L102-L107)\n\t- [ERC721A._exists(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L395-L402)\n\t- [ERC721A._transfer(address,address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L488-L539)\n\t- [ERC721A.ownershipOf(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L199-L225)\n\t- [ERC721A.totalSupply()](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L122-L127)\n",
                "id": "2fa0266b4302e44db5bd04397ba06c8680474f57f61b6f8fcebf6c7277fb7330",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in YARD.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#73-101):\n\tExternal calls:\n\t- ! _pay(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#93-94)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#107-111)\n\tState variables written after the call(s):\n\t- _currentBatch.quantity = (_currentBatch.quantity - quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#96-100)\n\tYARD._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#29-30) can be used in cross function reentrancies:\n\t- YARD._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#29-30)\n\t- YARD._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#101-112)\n\t- YARD.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#73-101)\n\t- YARD.mintAsFreeMinter(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#170-194)\n\t- YARD.setCurrentBatch(uint256,uint256,bool) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#120-139)\n\t- YARD.setCurrentBatchActive(bool) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#139-142)\n",
                "markdown": "Reentrancy in [YARD.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L73-L101):\n\tExternal calls:\n\t- [! _pay(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L93-L94)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L107-L111)\n\tState variables written after the call(s):\n\t- [_currentBatch.quantity = (_currentBatch.quantity - quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L96-L100)\n\t[YARD._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L29-L30) can be used in cross function reentrancies:\n\t- [YARD._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L29-L30)\n\t- [YARD._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L101-L112)\n\t- [YARD.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L73-L101)\n\t- [YARD.mintAsFreeMinter(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L170-L194)\n\t- [YARD.setCurrentBatch(uint256,uint256,bool)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L120-L139)\n\t- [YARD.setCurrentBatchActive(bool)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L139-L142)\n",
                "id": "7d926e53154d29dc8fd720d5363a5c8bd432b2e749024dad1481134fd6444393",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ERC721A._mint(address,uint256,bytes,bool) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#361-408):\n\tExternal calls:\n\t- ! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#394-397)\n\t\t- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#549-559)\n\tState variables written after the call(s):\n\t- _currentIndex = updatedIndex (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#406)\n\tERC721A._currentIndex (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#69-72) can be used in cross function reentrancies:\n\t- ERC721A._exists(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#328-336)\n\t- ERC721A._transfer(address,address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#414-465)\n\t- ERC721A.constructor(string,string) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#94-97)\n\t- ERC721A.ownershipOf(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#185-206)\n\t- ERC721A.totalSupply() (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#112-116)\n",
                "markdown": "Reentrancy in [ERC721A._mint(address,uint256,bytes,bool)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L361-L408):\n\tExternal calls:\n\t- [! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L394-L397)\n\t\t- [retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L549-L559)\n\tState variables written after the call(s):\n\t- [_currentIndex = updatedIndex](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L406)\n\t[ERC721A._currentIndex](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L69-L72) can be used in cross function reentrancies:\n\t- [ERC721A._exists(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L328-L336)\n\t- [ERC721A._transfer(address,address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L414-L465)\n\t- [ERC721A.constructor(string,string)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L94-L97)\n\t- [ERC721A.ownershipOf(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L185-L206)\n\t- [ERC721A.totalSupply()](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L112-L116)\n",
                "id": "8a06e24b0e4066587e1d1fc45605ddba41237d497c1b4442050cb98e44897a7a",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ATLACRE.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#38-53):\n\tExternal calls:\n\t- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#48-49)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#62-66)\n\tState variables written after the call(s):\n\t- _currentBatch.quantity = (_currentBatch.quantity - quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#50-53)\n\tATLACRE._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#23-24) can be used in cross function reentrancies:\n\t- ATLACRE._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#23-24)\n\t- ATLACRE._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#53-67)\n\t- ATLACRE.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#38-53)\n\t- ATLACRE.setCurrentBatch(uint256,uint256,bool) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#74-87)\n\t- ATLACRE.setCurrentBatchActive(bool) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#87-92)\n",
                "markdown": "Reentrancy in [ATLACRE.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L38-L53):\n\tExternal calls:\n\t- [require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L48-L49)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L62-L66)\n\tState variables written after the call(s):\n\t- [_currentBatch.quantity = (_currentBatch.quantity - quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L50-L53)\n\t[ATLACRE._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L23-L24) can be used in cross function reentrancies:\n\t- [ATLACRE._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L23-L24)\n\t- [ATLACRE._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L53-L67)\n\t- [ATLACRE.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L38-L53)\n\t- [ATLACRE.setCurrentBatch(uint256,uint256,bool)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L74-L87)\n\t- [ATLACRE.setCurrentBatchActive(bool)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L87-L92)\n",
                "id": "997abe479dc88c6a5c491872fcf38add6479f642170f1a41d23fe98c03089887",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (v1-migrator/contracts/Migrator.sol#206-257):\n\tExternal calls:\n\t- _withdrawOldNFT(Requirements.acre,_acre[i]) (v1-migrator/contracts/Migrator.sol#223-225)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#229-232)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\t- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (v1-migrator/contracts/Migrator.sol#235-236)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#237-244)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\t- _withdrawOldNFT(Requirements.yard,_yard[i_scope_1]) (v1-migrator/contracts/Migrator.sol#248-249)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (v1-migrator/contracts/Migrator.sol#250-257)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\tState variables written after the call(s):\n\t- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (v1-migrator/contracts/Migrator.sol#250-257)\n\t\t- lastAssetIdMinted[_nft2] = newLastMintedID (v1-migrator/contracts/Migrator.sol#125-126)\n\tMigrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#28-29) can be used in cross function reentrancies:\n\t- Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (v1-migrator/contracts/Migrator.sol#92-128)\n\t- Migrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#28-29)\n",
                "markdown": "Reentrancy in [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])](v1-migrator/contracts/Migrator.sol#L206-L257):\n\tExternal calls:\n\t- [_withdrawOldNFT(Requirements.acre,_acre[i])](v1-migrator/contracts/Migrator.sol#L223-L225)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L229-L232)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\t- [_withdrawOldNFT(Requirements.plot,_plot[i_scope_0])](v1-migrator/contracts/Migrator.sol#L235-L236)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L237-L244)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\t- [_withdrawOldNFT(Requirements.yard,_yard[i_scope_1])](v1-migrator/contracts/Migrator.sol#L248-L249)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard)](v1-migrator/contracts/Migrator.sol#L250-L257)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\tState variables written after the call(s):\n\t- [_mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard)](v1-migrator/contracts/Migrator.sol#L250-L257)\n\t\t- [lastAssetIdMinted[_nft2] = newLastMintedID](v1-migrator/contracts/Migrator.sol#L125-L126)\n\t[Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L28-L29) can be used in cross function reentrancies:\n\t- [Migrator._mintNewNFT(address,address,address,uint256,uint256[])](v1-migrator/contracts/Migrator.sol#L92-L128)\n\t- [Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L28-L29)\n",
                "id": "c0bb0183b6491ddda7a3ea103add90b823b02bd98b433609f5501969cdc2ae46",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ACRE.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#70-97):\n\tExternal calls:\n\t- ! _pay(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#89-90)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#104-106)\n\tState variables written after the call(s):\n\t- _currentBatch.quantity = (_currentBatch.quantity - quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#92-96)\n\tACRE._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#28-29) can be used in cross function reentrancies:\n\t- ACRE._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#28-29)\n\t- ACRE._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#97-108)\n\t- ACRE.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#70-97)\n\t- ACRE.mintAsFreeMinter(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#164-190)\n\t- ACRE.setCurrentBatch(uint256,uint256,bool) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#115-133)\n\t- ACRE.setCurrentBatchActive(bool) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#133-136)\n",
                "markdown": "Reentrancy in [ACRE.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L70-L97):\n\tExternal calls:\n\t- [! _pay(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L89-L90)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L104-L106)\n\tState variables written after the call(s):\n\t- [_currentBatch.quantity = (_currentBatch.quantity - quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L92-L96)\n\t[ACRE._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L28-L29) can be used in cross function reentrancies:\n\t- [ACRE._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L28-L29)\n\t- [ACRE._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L97-L108)\n\t- [ACRE.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L70-L97)\n\t- [ACRE.mintAsFreeMinter(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L164-L190)\n\t- [ACRE.setCurrentBatch(uint256,uint256,bool)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L115-L133)\n\t- [ACRE.setCurrentBatchActive(bool)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L133-L136)\n",
                "id": "c1890e891abfa48f017e19f396059ff35a7c531a7f125e33bac08a6b9972466f",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ATLYARD.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#38-53):\n\tExternal calls:\n\t- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#48-49)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#61-65)\n\tState variables written after the call(s):\n\t- _currentBatch.quantity = (_currentBatch.quantity - quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#50-53)\n\tATLYARD._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#23-24) can be used in cross function reentrancies:\n\t- ATLYARD._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#23-24)\n\t- ATLYARD._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#53-66)\n\t- ATLYARD.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#38-53)\n\t- ATLYARD.setCurrentBatch(uint256,uint256,bool) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#73-86)\n\t- ATLYARD.setCurrentBatchActive(bool) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#86-91)\n",
                "markdown": "Reentrancy in [ATLYARD.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L38-L53):\n\tExternal calls:\n\t- [require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L48-L49)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L61-L65)\n\tState variables written after the call(s):\n\t- [_currentBatch.quantity = (_currentBatch.quantity - quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L50-L53)\n\t[ATLYARD._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L23-L24) can be used in cross function reentrancies:\n\t- [ATLYARD._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L23-L24)\n\t- [ATLYARD._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L53-L66)\n\t- [ATLYARD.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L38-L53)\n\t- [ATLYARD.setCurrentBatch(uint256,uint256,bool)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L73-L86)\n\t- [ATLYARD.setCurrentBatchActive(bool)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L86-L91)\n",
                "id": "c98b5706eb612c6c045dead6c22e26a46a3fdb514ed22569642f49d63c1a6cf0",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ATLPLOT.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#33-48):\n\tExternal calls:\n\t- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#43-44)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#56-60)\n\tState variables written after the call(s):\n\t- _currentBatch.quantity = (_currentBatch.quantity - quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#46-48)\n\tATLPLOT._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#23-24) can be used in cross function reentrancies:\n\t- ATLPLOT._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#23-24)\n\t- ATLPLOT._pay(address,uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#49-61)\n\t- ATLPLOT.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#33-48)\n\t- ATLPLOT.setCurrentBatch(uint256,uint256,bool) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#68-81)\n\t- ATLPLOT.setCurrentBatchActive(bool) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#81-86)\n",
                "markdown": "Reentrancy in [ATLPLOT.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L33-L48):\n\tExternal calls:\n\t- [require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L43-L44)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L56-L60)\n\tState variables written after the call(s):\n\t- [_currentBatch.quantity = (_currentBatch.quantity - quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L46-L48)\n\t[ATLPLOT._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L23-L24) can be used in cross function reentrancies:\n\t- [ATLPLOT._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L23-L24)\n\t- [ATLPLOT._pay(address,uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L49-L61)\n\t- [ATLPLOT.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L33-L48)\n\t- [ATLPLOT.setCurrentBatch(uint256,uint256,bool)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L68-L81)\n\t- [ATLPLOT.setCurrentBatchActive(bool)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L81-L86)\n",
                "id": "db1de3519cfc5734bc386508d852e25a7d66dee6aaf0726d5caf99411bc9e6c8",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (v1-migrator/contracts/Migrator.sol#92-128):\n\tExternal calls:\n\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\tState variables written after the call(s):\n\t- lastAssetIdMinted[_nft2] = newLastMintedID (v1-migrator/contracts/Migrator.sol#125-126)\n\tMigrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#28-29) can be used in cross function reentrancies:\n\t- Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (v1-migrator/contracts/Migrator.sol#92-128)\n\t- Migrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#28-29)\n",
                "markdown": "Reentrancy in [Migrator._mintNewNFT(address,address,address,uint256,uint256[])](v1-migrator/contracts/Migrator.sol#L92-L128):\n\tExternal calls:\n\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\tState variables written after the call(s):\n\t- [lastAssetIdMinted[_nft2] = newLastMintedID](v1-migrator/contracts/Migrator.sol#L125-L126)\n\t[Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L28-L29) can be used in cross function reentrancies:\n\t- [Migrator._mintNewNFT(address,address,address,uint256,uint256[])](v1-migrator/contracts/Migrator.sol#L92-L128)\n\t- [Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L28-L29)\n",
                "id": "f59e2b9c6f0d77291e70d433b4a693dffcdea2e3c725e33ca3ecbf305149ca65",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (v1-migrator/contracts/Migrator.sol#206-257):\n\tExternal calls:\n\t- _withdrawOldNFT(Requirements.acre,_acre[i]) (v1-migrator/contracts/Migrator.sol#223-225)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#229-232)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\t- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (v1-migrator/contracts/Migrator.sol#235-236)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#237-244)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\tState variables written after the call(s):\n\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#237-244)\n\t\t- lastAssetIdMinted[_nft2] = newLastMintedID (v1-migrator/contracts/Migrator.sol#125-126)\n\tMigrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#28-29) can be used in cross function reentrancies:\n\t- Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (v1-migrator/contracts/Migrator.sol#92-128)\n\t- Migrator.lastAssetIdMinted (v1-migrator/contracts/Migrator.sol#28-29)\n",
                "markdown": "Reentrancy in [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])](v1-migrator/contracts/Migrator.sol#L206-L257):\n\tExternal calls:\n\t- [_withdrawOldNFT(Requirements.acre,_acre[i])](v1-migrator/contracts/Migrator.sol#L223-L225)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L229-L232)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\t- [_withdrawOldNFT(Requirements.plot,_plot[i_scope_0])](v1-migrator/contracts/Migrator.sol#L235-L236)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L237-L244)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\tState variables written after the call(s):\n\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L237-L244)\n\t\t- [lastAssetIdMinted[_nft2] = newLastMintedID](v1-migrator/contracts/Migrator.sol#L125-L126)\n\t[Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L28-L29) can be used in cross function reentrancies:\n\t- [Migrator._mintNewNFT(address,address,address,uint256,uint256[])](v1-migrator/contracts/Migrator.sol#L92-L128)\n\t- [Migrator.lastAssetIdMinted](v1-migrator/contracts/Migrator.sol#L28-L29)\n",
                "id": "fedb9bf231931a710337d9842d9212216a28ca8f4fb201c2160609455e0b5c14",
                "check": "reentrancy-no-eth",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._mintNewNFT(address,address,address,uint256,uint256[]).newLastMintedID (v1-migrator/contracts/Migrator.sol#107) is a local variable never initialized\n",
                "markdown": "[Migrator._mintNewNFT(address,address,address,uint256,uint256[]).newLastMintedID](v1-migrator/contracts/Migrator.sol#L107) is a local variable never initialized\n",
                "id": "1625eeb0b1948eaa9cf4109dada9c1aa621373852d27ba641a1b56524583323c",
                "check": "uninitialized-local",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._mintNewNFT(address,address,address,uint256,uint256[]).counter (v1-migrator/contracts/Migrator.sol#108) is a local variable never initialized\n",
                "markdown": "[Migrator._mintNewNFT(address,address,address,uint256,uint256[]).counter](v1-migrator/contracts/Migrator.sol#L108) is a local variable never initialized\n",
                "id": "41c6798e311bdd0fb7a9f04f6828e9412c1c8af06449d6f66671071d163f182d",
                "check": "uninitialized-local",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._mintNewNFT(address,address,address,uint256,uint256[]).quantityMinted (v1-migrator/contracts/Migrator.sol#105-106) is a local variable never initialized\n",
                "markdown": "[Migrator._mintNewNFT(address,address,address,uint256,uint256[]).quantityMinted](v1-migrator/contracts/Migrator.sol#L105-L106) is a local variable never initialized\n",
                "id": "72a6729c5a13007e385723b53e5c28f4db433d9e7bedcc23a21f307f45acc876",
                "check": "uninitialized-local",
                "impact": "Medium",
                "confidence": "Medium"
            },
            {
                "description": "ATLYARD.setTxFee(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#91-94) should emit an event for: \n\t- _txFeeAmount = amount (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#92-93) \n",
                "markdown": "[ATLYARD.setTxFee(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L91-L94) should emit an event for: \n\t- [_txFeeAmount = amount](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L92-L93) \n",
                "id": "50108c500e2940d2d79684da1c46b0539aab09d15523d59b07fd67a32a6d25fe",
                "check": "events-maths",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLACRE.setTxFee(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#92-95) should emit an event for: \n\t- _txFeeAmount = amount (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#93-94) \n",
                "markdown": "[ATLACRE.setTxFee(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L92-L95) should emit an event for: \n\t- [_txFeeAmount = amount](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L93-L94) \n",
                "id": "536789a454717ecbd05cd09356f5bebee7501ed3f4da9dd8d84c0bf3d5cfe87c",
                "check": "events-maths",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLPLOT.setTxFee(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#86-90) should emit an event for: \n\t- _txFeeAmount = amount (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#87-88) \n",
                "markdown": "[ATLPLOT.setTxFee(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L86-L90) should emit an event for: \n\t- [_txFeeAmount = amount](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L87-L88) \n",
                "id": "62c0ba87c431ced287578ad418cfb0f1427fc81eacf4118384629da8c074600a",
                "check": "events-maths",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLYARD.constructor(address).paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#9) lacks a zero-check on :\n\t\t- _paymentToken = paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#9-10)\n",
                "markdown": "[ATLYARD.constructor(address).paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L9) lacks a zero-check on :\n\t\t- [_paymentToken = paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L9-L10)\n",
                "id": "00e2aedab0519ff5fd866ceae492f54ef2d30a0323272896b2f7832b328c96b2",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "YARD.initialize(address).paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#40-42) lacks a zero-check on :\n\t\t- _paymentToken = paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#44)\n",
                "markdown": "[YARD.initialize(address).paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L40-L42) lacks a zero-check on :\n\t\t- [_paymentToken = paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L44)\n",
                "id": "14ed1ce05f1a797338ece7b9a924fecb5aca0bea225723328db0d529854fa1da",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ACRE.setPaymentToken(address).token (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#142-144) lacks a zero-check on :\n\t\t- _paymentToken = token (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#145)\n",
                "markdown": "[ACRE.setPaymentToken(address).token](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L142-L144) lacks a zero-check on :\n\t\t- [_paymentToken = token](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L145)\n",
                "id": "16dc58d820a6adc4225ec9063caf8e961fa990024796d46843d269e5bd6ded21",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ACRE.initialize(address).paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#39-41) lacks a zero-check on :\n\t\t- _paymentToken = paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#43)\n",
                "markdown": "[ACRE.initialize(address).paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L39-L41) lacks a zero-check on :\n\t\t- [_paymentToken = paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L43)\n",
                "id": "3f8fbb42570a055cadf60950abefed8c0455272921f3f61fdd782ec908db9dc1",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLYARD.setFeeCollector(address).collector (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#99) lacks a zero-check on :\n\t\t- _feeCollector = collector (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#100-102)\n",
                "markdown": "[ATLYARD.setFeeCollector(address).collector](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L99) lacks a zero-check on :\n\t\t- [_feeCollector = collector](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L100-L102)\n",
                "id": "5033169f93144241a57cf47fc66a1b46f8e00e52c5a1ff205092de3b28a51e50",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "PLOT.initialize(address).paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#40-42) lacks a zero-check on :\n\t\t- _paymentToken = paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#44)\n",
                "markdown": "[PLOT.initialize(address).paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L40-L42) lacks a zero-check on :\n\t\t- [_paymentToken = paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L44)\n",
                "id": "544dbc1334fe6f0c6e1b48d92eb89b0da3e5f7df7c04ac4617052cbb3cbc6b26",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ACRE.setFeeCollector(address).collector (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#147-149) lacks a zero-check on :\n\t\t- _feeCollector = collector (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#150-151)\n",
                "markdown": "[ACRE.setFeeCollector(address).collector](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L147-L149) lacks a zero-check on :\n\t\t- [_feeCollector = collector](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L150-L151)\n",
                "id": "5c03e96c898121068f469166e18ddd5b506e0b59175c0786670492905fdc4323",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLACRE.constructor(address).paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#9) lacks a zero-check on :\n\t\t- _paymentToken = paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#9-10)\n",
                "markdown": "[ATLACRE.constructor(address).paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L9) lacks a zero-check on :\n\t\t- [_paymentToken = paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L9-L10)\n",
                "id": "8341c3290448bcd1a5f044ce0409f5a210be15ae42a2cfd212bc1ecd9ef353f7",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLACRE.setPaymentToken(address).token (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#96) lacks a zero-check on :\n\t\t- _paymentToken = token (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#97-98)\n",
                "markdown": "[ATLACRE.setPaymentToken(address).token](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L96) lacks a zero-check on :\n\t\t- [_paymentToken = token](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L97-L98)\n",
                "id": "94585212c3f70022c4688035be066a6856f7311a4d533b2fd938ee1ed2e65dbd",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLYARD.setPaymentToken(address).token (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#95) lacks a zero-check on :\n\t\t- _paymentToken = token (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#96-97)\n",
                "markdown": "[ATLYARD.setPaymentToken(address).token](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L95) lacks a zero-check on :\n\t\t- [_paymentToken = token](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L96-L97)\n",
                "id": "a59df957eaaf67f7e30371fd0cfb3541749800b889da8cd9b7444e0b8e3d65ba",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "YARD.setFeeCollector(address).collector (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#152-155) lacks a zero-check on :\n\t\t- _feeCollector = collector (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#155-156)\n",
                "markdown": "[YARD.setFeeCollector(address).collector](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L152-L155) lacks a zero-check on :\n\t\t- [_feeCollector = collector](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L155-L156)\n",
                "id": "ac726bac67a9cd535939588151d1a75b93f5a4cc147aab4986f883ef0c5ff5b4",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLACRE.setFeeCollector(address).collector (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#100) lacks a zero-check on :\n\t\t- _feeCollector = collector (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#101-102)\n",
                "markdown": "[ATLACRE.setFeeCollector(address).collector](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L100) lacks a zero-check on :\n\t\t- [_feeCollector = collector](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L101-L102)\n",
                "id": "cd274aea8651dac96f94eeeb926b22d80b4efb9b96cd75718034556fa2c98463",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "PLOT.setFeeCollector(address).collector (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#148-150) lacks a zero-check on :\n\t\t- _feeCollector = collector (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#150-152)\n",
                "markdown": "[PLOT.setFeeCollector(address).collector](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L148-L150) lacks a zero-check on :\n\t\t- [_feeCollector = collector](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L150-L152)\n",
                "id": "d2a8df53d3f40d305b2a112f55e8f0f8a2cb5d3502affaa4d3b695214b76742a",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLPLOT.setPaymentToken(address).token (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#90) lacks a zero-check on :\n\t\t- _paymentToken = token (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#91-93)\n",
                "markdown": "[ATLPLOT.setPaymentToken(address).token](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L90) lacks a zero-check on :\n\t\t- [_paymentToken = token](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L91-L93)\n",
                "id": "d2c9e90aa7e96c73e23ef652cbf31c527e9102179046a6a32490dfa0349c613d",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLPLOT.constructor(address).paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#9) lacks a zero-check on :\n\t\t- _paymentToken = paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#9-10)\n",
                "markdown": "[ATLPLOT.constructor(address).paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L9) lacks a zero-check on :\n\t\t- [_paymentToken = paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L9-L10)\n",
                "id": "d6f1149e8239c31f6b7da6af641855343209cd8bcd3b339c0b9ffa3c670b92df",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "PLOT.setPaymentToken(address).token (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#143-145) lacks a zero-check on :\n\t\t- _paymentToken = token (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#146)\n",
                "markdown": "[PLOT.setPaymentToken(address).token](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L143-L145) lacks a zero-check on :\n\t\t- [_paymentToken = token](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L146)\n",
                "id": "e8cc2710eb658e2396ac7dca13dd676922799ca13970214a520256136841600a",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "YARD.setPaymentToken(address).token (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#147-150) lacks a zero-check on :\n\t\t- _paymentToken = token (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#150-151)\n",
                "markdown": "[YARD.setPaymentToken(address).token](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L147-L150) lacks a zero-check on :\n\t\t- [_paymentToken = token](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L150-L151)\n",
                "id": "f2135efa4c14a36f67d83bad4d79c732502a8e3f3f98e7c7e8db1e09ddba8908",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ATLPLOT.setFeeCollector(address).collector (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#94) lacks a zero-check on :\n\t\t- _feeCollector = collector (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#95-98)\n",
                "markdown": "[ATLPLOT.setFeeCollector(address).collector](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L94) lacks a zero-check on :\n\t\t- [_feeCollector = collector](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L95-L98)\n",
                "id": "fb06320b06e19abc6d97e90afab429775ad4495f94b46b4f43622607efc4c934",
                "check": "missing-zero-check",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._withdrawOldNFT(address,uint256) (v1-migrator/contracts/Migrator.sol#69-90) has external calls inside a loop: ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n",
                "markdown": "[Migrator._withdrawOldNFT(address,uint256)](v1-migrator/contracts/Migrator.sol#L69-L90) has external calls inside a loop: [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n",
                "id": "078c5c484588472dd27ab67361fb43e0bf247b1596e29924ca0b075fe48916f5",
                "check": "calls-loop",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._withdrawOldNFT(address,uint256) (v1-migrator/contracts/Migrator.sol#69-90) has external calls inside a loop: isApproved = ICollectible(_nft1).isApprovedForAll(_msgSender(),address(this)) (v1-migrator/contracts/Migrator.sol#80-83)\n",
                "markdown": "[Migrator._withdrawOldNFT(address,uint256)](v1-migrator/contracts/Migrator.sol#L69-L90) has external calls inside a loop: [isApproved = ICollectible(_nft1).isApprovedForAll(_msgSender(),address(this))](v1-migrator/contracts/Migrator.sol#L80-L83)\n",
                "id": "ba1db066718d07a72ef5c98ddf88f2b77207394aa30e242f3481fc294d521144",
                "check": "calls-loop",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Migrator._withdrawOldNFT(address,uint256) (v1-migrator/contracts/Migrator.sol#69-90) has external calls inside a loop: isSenderNftOwner = ICollectible(_nft1).ownerOf(_tokenId) (v1-migrator/contracts/Migrator.sol#76-78)\n",
                "markdown": "[Migrator._withdrawOldNFT(address,uint256)](v1-migrator/contracts/Migrator.sol#L69-L90) has external calls inside a loop: [isSenderNftOwner = ICollectible(_nft1).ownerOf(_tokenId)](v1-migrator/contracts/Migrator.sol#L76-L78)\n",
                "id": "f1f6ef23a7f35127685643df83765671122ed974d0ac901d41b69d6a405a1641",
                "check": "calls-loop",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateERC20Token(uint256,address,address) (v1-migrator/contracts/Migrator.sol#131-205):\n\tExternal calls:\n\t- success = IERC20Upgradeable(Requirements.tokenV1).transferFrom(_msgSender(),address(this),_amount) (v1-migrator/contracts/Migrator.sol#182-186)\n\t- success = IERC20Upgradeable(Requirements.tokenV2).transfer(_msgSender(),_amount) (v1-migrator/contracts/Migrator.sol#188-193)\n\tState variables written after the call(s):\n\t- tokensMigrated[_token1] += _amount (v1-migrator/contracts/Migrator.sol#195)\n\t- tokensMigrated[_token2] += tokenBToRecieve (v1-migrator/contracts/Migrator.sol#196-198)\n",
                "markdown": "Reentrancy in [Migrator.migrateERC20Token(uint256,address,address)](v1-migrator/contracts/Migrator.sol#L131-L205):\n\tExternal calls:\n\t- [success = IERC20Upgradeable(Requirements.tokenV1).transferFrom(_msgSender(),address(this),_amount)](v1-migrator/contracts/Migrator.sol#L182-L186)\n\t- [success = IERC20Upgradeable(Requirements.tokenV2).transfer(_msgSender(),_amount)](v1-migrator/contracts/Migrator.sol#L188-L193)\n\tState variables written after the call(s):\n\t- [tokensMigrated[_token1] += _amount](v1-migrator/contracts/Migrator.sol#L195)\n\t- [tokensMigrated[_token2] += tokenBToRecieve](v1-migrator/contracts/Migrator.sol#L196-L198)\n",
                "id": "fb7b0048cf05b419458f621a55baf49c001522fa62d506b4e0e14f55d86dd8de",
                "check": "reentrancy-benign",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (v1-migrator/contracts/Migrator.sol#206-257):\n\tExternal calls:\n\t- _withdrawOldNFT(Requirements.acre,_acre[i]) (v1-migrator/contracts/Migrator.sol#223-225)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#229-232)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\t- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (v1-migrator/contracts/Migrator.sol#235-236)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#237-244)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\t- _withdrawOldNFT(Requirements.yard,_yard[i_scope_1]) (v1-migrator/contracts/Migrator.sol#248-249)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (v1-migrator/contracts/Migrator.sol#250-257)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\tEvent emitted after the call(s):\n\t- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (v1-migrator/contracts/Migrator.sol#115-120)\n\t\t- _mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard) (v1-migrator/contracts/Migrator.sol#250-257)\n",
                "markdown": "Reentrancy in [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])](v1-migrator/contracts/Migrator.sol#L206-L257):\n\tExternal calls:\n\t- [_withdrawOldNFT(Requirements.acre,_acre[i])](v1-migrator/contracts/Migrator.sol#L223-L225)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L229-L232)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\t- [_withdrawOldNFT(Requirements.plot,_plot[i_scope_0])](v1-migrator/contracts/Migrator.sol#L235-L236)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L237-L244)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\t- [_withdrawOldNFT(Requirements.yard,_yard[i_scope_1])](v1-migrator/contracts/Migrator.sol#L248-L249)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard)](v1-migrator/contracts/Migrator.sol#L250-L257)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\tEvent emitted after the call(s):\n\t- [NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp)](v1-migrator/contracts/Migrator.sol#L115-L120)\n\t\t- [_mintNewNFT(Requirements.yard,Requirements.yardV2,_msgSender(),_yard.length,_yard)](v1-migrator/contracts/Migrator.sol#L250-L257)\n",
                "id": "10a863ca39e338ac6b3624e753b99beccb9d5ed0d17e16f02e1b5caa1d8c97a8",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in PLOT.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#71-98):\n\tExternal calls:\n\t- ! _pay(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#90-91)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#105-107)\n\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#97-98)\n\t\t- retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#635-648)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,updatedIndex) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#459-461)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#97-98)\n\t- Transfer(address(0),to,updatedIndex ++) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#475-477)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#97-98)\n",
                "markdown": "Reentrancy in [PLOT.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L71-L98):\n\tExternal calls:\n\t- [! _pay(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L90-L91)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L105-L107)\n\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L97-L98)\n\t\t- [retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L635-L648)\n\tEvent emitted after the call(s):\n\t- [Transfer(address(0),to,updatedIndex)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L459-L461)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L97-L98)\n\t- [Transfer(address(0),to,updatedIndex ++)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L475-L477)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L97-L98)\n",
                "id": "1add8cd5df5e9879aa9179bcd509f19dfef2ae5db4e45a5f25cf73a8fe388815",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ATLACRE.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#38-53):\n\tExternal calls:\n\t- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#48-49)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#62-66)\n\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#53)\n\t\t- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#549-559)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,updatedIndex) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#393-394)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#53)\n\t- Transfer(address(0),to,updatedIndex ++) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#405)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#53)\n",
                "markdown": "Reentrancy in [ATLACRE.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L38-L53):\n\tExternal calls:\n\t- [require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L48-L49)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L62-L66)\n\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L53)\n\t\t- [retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L549-L559)\n\tEvent emitted after the call(s):\n\t- [Transfer(address(0),to,updatedIndex)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L393-L394)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L53)\n\t- [Transfer(address(0),to,updatedIndex ++)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L405)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L53)\n",
                "id": "4187dfc39cf69bd3bddb95936cbb9d8f4c1bcf4a0764e777718e3fad792e91e8",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (v1-migrator/contracts/Migrator.sol#206-257):\n\tExternal calls:\n\t- _withdrawOldNFT(Requirements.acre,_acre[i]) (v1-migrator/contracts/Migrator.sol#223-225)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#229-232)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\tEvent emitted after the call(s):\n\t- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (v1-migrator/contracts/Migrator.sol#115-120)\n\t\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#229-232)\n",
                "markdown": "Reentrancy in [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])](v1-migrator/contracts/Migrator.sol#L206-L257):\n\tExternal calls:\n\t- [_withdrawOldNFT(Requirements.acre,_acre[i])](v1-migrator/contracts/Migrator.sol#L223-L225)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L229-L232)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\tEvent emitted after the call(s):\n\t- [NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp)](v1-migrator/contracts/Migrator.sol#L115-L120)\n\t\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L229-L232)\n",
                "id": "489de0c1e5fb3789d2bc568beee4e021f6b70300e90c7eca09fc0fe44379cf4e",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateERC20Token(uint256,address,address) (v1-migrator/contracts/Migrator.sol#131-205):\n\tExternal calls:\n\t- success = IERC20Upgradeable(Requirements.tokenV1).transferFrom(_msgSender(),address(this),_amount) (v1-migrator/contracts/Migrator.sol#182-186)\n\t- success = IERC20Upgradeable(Requirements.tokenV2).transfer(_msgSender(),_amount) (v1-migrator/contracts/Migrator.sol#188-193)\n\tEvent emitted after the call(s):\n\t- TokenMigrationCompleted(_msgSender(),Requirements.tokenV1,Requirements.tokenV2,_amount,tokenBToRecieve,block.timestamp) (v1-migrator/contracts/Migrator.sol#199-204)\n",
                "markdown": "Reentrancy in [Migrator.migrateERC20Token(uint256,address,address)](v1-migrator/contracts/Migrator.sol#L131-L205):\n\tExternal calls:\n\t- [success = IERC20Upgradeable(Requirements.tokenV1).transferFrom(_msgSender(),address(this),_amount)](v1-migrator/contracts/Migrator.sol#L182-L186)\n\t- [success = IERC20Upgradeable(Requirements.tokenV2).transfer(_msgSender(),_amount)](v1-migrator/contracts/Migrator.sol#L188-L193)\n\tEvent emitted after the call(s):\n\t- [TokenMigrationCompleted(_msgSender(),Requirements.tokenV1,Requirements.tokenV2,_amount,tokenBToRecieve,block.timestamp)](v1-migrator/contracts/Migrator.sol#L199-L204)\n",
                "id": "527b4eb266ca7e2d13e6c5ded9005badcbf1e0dbee8b340d8ac1e92acc48f3ca",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ERC721A._mint(address,uint256,bytes,bool) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#427-481):\n\tExternal calls:\n\t- ! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#462-467)\n\t\t- retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#635-648)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,updatedIndex) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#459-461)\n",
                "markdown": "Reentrancy in [ERC721A._mint(address,uint256,bytes,bool)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L427-L481):\n\tExternal calls:\n\t- [! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L462-L467)\n\t\t- [retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L635-L648)\n\tEvent emitted after the call(s):\n\t- [Transfer(address(0),to,updatedIndex)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L459-L461)\n",
                "id": "8c1aeed736b8a20376dabce8081eac3747fa787d710c249dfcfe19dc258c416b",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in YARD.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#73-101):\n\tExternal calls:\n\t- ! _pay(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#93-94)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#107-111)\n\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#100-101)\n\t\t- retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#635-648)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,updatedIndex) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#459-461)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#100-101)\n\t- Transfer(address(0),to,updatedIndex ++) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#475-477)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#100-101)\n",
                "markdown": "Reentrancy in [YARD.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L73-L101):\n\tExternal calls:\n\t- [! _pay(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L93-L94)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L107-L111)\n\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L100-L101)\n\t\t- [retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L635-L648)\n\tEvent emitted after the call(s):\n\t- [Transfer(address(0),to,updatedIndex)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L459-L461)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L100-L101)\n\t- [Transfer(address(0),to,updatedIndex ++)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L475-L477)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L100-L101)\n",
                "id": "9b8fc68a0b78bd8606377370bbb2ba80d4b7750348118f089e04fef0b9667c01",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ACRE.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#70-97):\n\tExternal calls:\n\t- ! _pay(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#89-90)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#104-106)\n\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#96-97)\n\t\t- retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#635-648)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,updatedIndex) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#459-461)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#96-97)\n\t- Transfer(address(0),to,updatedIndex ++) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#475-477)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#96-97)\n",
                "markdown": "Reentrancy in [ACRE.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L70-L97):\n\tExternal calls:\n\t- [! _pay(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L89-L90)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L104-L106)\n\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L96-L97)\n\t\t- [retval = IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(),from,tokenId,_data)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L635-L648)\n\tEvent emitted after the call(s):\n\t- [Transfer(address(0),to,updatedIndex)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L459-L461)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L96-L97)\n\t- [Transfer(address(0),to,updatedIndex ++)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L475-L477)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L96-L97)\n",
                "id": "9d24c53f581134fc40fe8b96cde91137f7a313cc20665793b1279c2b2eeabccf",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator.migrateAllAsset(uint256[],uint256[],uint256[]) (v1-migrator/contracts/Migrator.sol#206-257):\n\tExternal calls:\n\t- _withdrawOldNFT(Requirements.acre,_acre[i]) (v1-migrator/contracts/Migrator.sol#223-225)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre) (v1-migrator/contracts/Migrator.sol#229-232)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\t- _withdrawOldNFT(Requirements.plot,_plot[i_scope_0]) (v1-migrator/contracts/Migrator.sol#235-236)\n\t\t- ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId) (v1-migrator/contracts/Migrator.sol#88-89)\n\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#237-244)\n\t\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\tEvent emitted after the call(s):\n\t- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (v1-migrator/contracts/Migrator.sol#115-120)\n\t\t- _mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot) (v1-migrator/contracts/Migrator.sol#237-244)\n",
                "markdown": "Reentrancy in [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])](v1-migrator/contracts/Migrator.sol#L206-L257):\n\tExternal calls:\n\t- [_withdrawOldNFT(Requirements.acre,_acre[i])](v1-migrator/contracts/Migrator.sol#L223-L225)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.acre,Requirements.acreV2,_msgSender(),_acre.length,_acre)](v1-migrator/contracts/Migrator.sol#L229-L232)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\t- [_withdrawOldNFT(Requirements.plot,_plot[i_scope_0])](v1-migrator/contracts/Migrator.sol#L235-L236)\n\t\t- [ICollectible(_nft1).transferFrom(_msgSender(),address(this),_tokenId)](v1-migrator/contracts/Migrator.sol#L88-L89)\n\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L237-L244)\n\t\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\tEvent emitted after the call(s):\n\t- [NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp)](v1-migrator/contracts/Migrator.sol#L115-L120)\n\t\t- [_mintNewNFT(Requirements.plot,Requirements.plotV2,_msgSender(),_plot.length,_plot)](v1-migrator/contracts/Migrator.sol#L237-L244)\n",
                "id": "9d6edfa0e1427fc6fbaf60ffeb18c2d7487ff24332820e8404a0bc4103985353",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ATLPLOT.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#33-48):\n\tExternal calls:\n\t- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#43-44)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#56-60)\n\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#48)\n\t\t- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#549-559)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,updatedIndex) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#393-394)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#48)\n\t- Transfer(address(0),to,updatedIndex ++) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#405)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#48)\n",
                "markdown": "Reentrancy in [ATLPLOT.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L33-L48):\n\tExternal calls:\n\t- [require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L43-L44)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L56-L60)\n\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L48)\n\t\t- [retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L549-L559)\n\tEvent emitted after the call(s):\n\t- [Transfer(address(0),to,updatedIndex)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L393-L394)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L48)\n\t- [Transfer(address(0),to,updatedIndex ++)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L405)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L48)\n",
                "id": "9ed08f198d499f002b111e54540612440aacd274adf0b5ea6226177970a09aa0",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ERC721A._mint(address,uint256,bytes,bool) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#361-408):\n\tExternal calls:\n\t- ! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#394-397)\n\t\t- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#549-559)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,updatedIndex) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#393-394)\n",
                "markdown": "Reentrancy in [ERC721A._mint(address,uint256,bytes,bool)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L361-L408):\n\tExternal calls:\n\t- [! _checkContractOnERC721Received(address(0),to,updatedIndex ++,_data)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L394-L397)\n\t\t- [retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L549-L559)\n\tEvent emitted after the call(s):\n\t- [Transfer(address(0),to,updatedIndex)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L393-L394)\n",
                "id": "c37e3f1f13de89111c49a4a7107a2e5abe05ce0c6edc5d00ce6b7ad8df5aed37",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in ATLYARD.mint(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#38-53):\n\tExternal calls:\n\t- require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#48-49)\n\t\t- token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#61-65)\n\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#53)\n\t\t- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#549-559)\n\tEvent emitted after the call(s):\n\t- Transfer(address(0),to,updatedIndex) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#393-394)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#53)\n\t- Transfer(address(0),to,updatedIndex ++) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#405)\n\t\t- _safeMint(msg.sender,quantity) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#53)\n",
                "markdown": "Reentrancy in [ATLYARD.mint(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L38-L53):\n\tExternal calls:\n\t- [require(bool,string)(_pay(msg.sender,quantity),Must pay minting fee)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L48-L49)\n\t\t- [token.transferFrom(payee,_feeCollector,_currentBatch.price * quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L61-L65)\n\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L53)\n\t\t- [retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L549-L559)\n\tEvent emitted after the call(s):\n\t- [Transfer(address(0),to,updatedIndex)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L393-L394)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L53)\n\t- [Transfer(address(0),to,updatedIndex ++)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L405)\n\t\t- [_safeMint(msg.sender,quantity)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L53)\n",
                "id": "c3e21618c3e1c22c9ee060ff009dd6bfd3b5895898771a0ed76e3f216be32269",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "Reentrancy in Migrator._mintNewNFT(address,address,address,uint256,uint256[]) (v1-migrator/contracts/Migrator.sol#92-128):\n\tExternal calls:\n\t- nftObj.mintAsFreeMinter(_quantity) (v1-migrator/contracts/Migrator.sol#103-104)\n\t- totalSupply = nftObj.totalSupply() (v1-migrator/contracts/Migrator.sol#104-105)\n\t- nftObj.transferFrom(address(this),_user,index) (v1-migrator/contracts/Migrator.sol#113-114)\n\tEvent emitted after the call(s):\n\t- NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp) (v1-migrator/contracts/Migrator.sol#115-120)\n",
                "markdown": "Reentrancy in [Migrator._mintNewNFT(address,address,address,uint256,uint256[])](v1-migrator/contracts/Migrator.sol#L92-L128):\n\tExternal calls:\n\t- [nftObj.mintAsFreeMinter(_quantity)](v1-migrator/contracts/Migrator.sol#L103-L104)\n\t- [totalSupply = nftObj.totalSupply()](v1-migrator/contracts/Migrator.sol#L104-L105)\n\t- [nftObj.transferFrom(address(this),_user,index)](v1-migrator/contracts/Migrator.sol#L113-L114)\n\tEvent emitted after the call(s):\n\t- [NFTMigrationCompleted(_user,_nft1,_nft2,_nfts[counter],index,block.timestamp)](v1-migrator/contracts/Migrator.sol#L115-L120)\n",
                "id": "cfa34b2123fa3a541e4608dfb2cf20496be6ed39f25934badb49f568912e85ef",
                "check": "reentrancy-events",
                "impact": "Low",
                "confidence": "Medium"
            },
            {
                "description": "ERC721A._checkContractOnERC721Received(address,address,uint256,bytes) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#627-648) uses assembly\n\t- INLINE ASM (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#644-647)\n",
                "markdown": "[ERC721A._checkContractOnERC721Received(address,address,uint256,bytes)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L627-L648) uses assembly\n\t- [INLINE ASM](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L644-L647)\n",
                "id": "55590a7b493ac21ae10adb5bcf1ecb72a969fdccd221e6e03dd2f7aa7c65030b",
                "check": "assembly",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "ERC721A._checkContractOnERC721Received(address,address,uint256,bytes) (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#543-559) uses assembly\n\t- INLINE ASM (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#554-558)\n",
                "markdown": "[ERC721A._checkContractOnERC721Received(address,address,uint256,bytes)](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L543-L559) uses assembly\n\t- [INLINE ASM](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L554-L558)\n",
                "id": "cc6590a2f3377cd966bd3c4761d99b8078cf0c21b954f6ada2afa42571ea9fa1",
                "check": "assembly",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "ERC721A._getAux(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#180-186) is never used and should be removed\n",
                "markdown": "[ERC721A._getAux(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L180-L186) is never used and should be removed\n",
                "id": "0449037e2b9db86e4eff524e56dc22349e7432734737fa27551651eaa3de990c",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ERC721A._burn(uint256) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#551-602) is never used and should be removed\n",
                "markdown": "[ERC721A._burn(uint256)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L551-L602) is never used and should be removed\n",
                "id": "184c97395045405bab4b9684f3b4399af16033d441a7fbb8ee57940e580eb706",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ATLYARD._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#66-73) is never used and should be removed\n",
                "markdown": "[ATLYARD._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L66-L73) is never used and should be removed\n",
                "id": "242175bf8910458137cbc8b9730d6e5adbe7e3f6894f9b517aee17a0bc12554d",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ATLPLOT._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#61-68) is never used and should be removed\n",
                "markdown": "[ATLPLOT._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L61-L68) is never used and should be removed\n",
                "id": "5a04ba9b691d09d6fe4389bd535fe9260a5b128fb1f1b4086c95c3795a762ec8",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ERC721A._numberBurned(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#172-179) is never used and should be removed\n",
                "markdown": "[ERC721A._numberBurned(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L172-L179) is never used and should be removed\n",
                "id": "6c05cc37eee9f9ca7bbc40f12d6e7ed2845e9f40c98c186c493172bc5827e45b",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "YARD._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#113-120) is never used and should be removed\n",
                "markdown": "[YARD._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L113-L120) is never used and should be removed\n",
                "id": "7a0a8e64840a7c47b148a22cc3518235340d678bbcd7bca051c08b5eee129274",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ACRE._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#108-115) is never used and should be removed\n",
                "markdown": "[ACRE._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L108-L115) is never used and should be removed\n",
                "id": "877abd2eaffc2967910e6079f0aa0fdcc530515abc693228d8d309b1d5adfc4c",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ATLACRE._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#67-74) is never used and should be removed\n",
                "markdown": "[ATLACRE._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L67-L74) is never used and should be removed\n",
                "id": "8be61e1ea25ac1a9821d007131779eddea2447a80afd05db2c731a7ee85e1b5f",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ERC721A._totalMinted() (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#129-138) is never used and should be removed\n",
                "markdown": "[ERC721A._totalMinted()](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L129-L138) is never used and should be removed\n",
                "id": "90a38499aec871c848d4a3a7479aa5d90e8522e1b1d300fef2e03dbc439c6551",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "PLOT._tax(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#109-116) is never used and should be removed\n",
                "markdown": "[PLOT._tax(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L109-L116) is never used and should be removed\n",
                "id": "b5256c260a384ced20390ece14cd0f015992bf85baf9a15291d20fb0c59445f1",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ERC721A._numberMinted(address) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#164-171) is never used and should be removed\n",
                "markdown": "[ERC721A._numberMinted(address)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L164-L171) is never used and should be removed\n",
                "id": "c5320606284ba22da419d9bf85a0d9b64c35f829d4e1b0dc5fd3baaa5fdaf710",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ERC721A._setAux(address,uint64) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#189-194) is never used and should be removed\n",
                "markdown": "[ERC721A._setAux(address,uint64)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L189-L194) is never used and should be removed\n",
                "id": "d8ffcae15feac3020d36f2d2bcfd8ac4c7ee4a92724dc78743293b0b647aca1c",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "ERC721A._baseURI() (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#284-288) is never used and should be removed\n",
                "markdown": "[ERC721A._baseURI()](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L284-L288) is never used and should be removed\n",
                "id": "ea398317256be7f5c9ba61997097aa3a945d1929804b7f87260ad864d3f3cbcc",
                "check": "dead-code",
                "impact": "Informational",
                "confidence": "Medium"
            },
            {
                "description": "solc-0.6.12 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.\n",
                "markdown": "solc-0.6.12 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.\n",
                "id": "dde195ef8d4d5c5489c6627531ef2ba10109e5f0768ce75d0cfbe826810ec83e",
                "check": "solc-version",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "solc-0.5.17 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.\n",
                "markdown": "solc-0.5.17 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.\n",
                "id": "4dda8ba93a7fa6a7dc9e0d0cce251b495bd68ba5c0886568c261877884acacfa",
                "check": "solc-version",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setTokenInfo(address,address,uint256)._price (v1-migrator/contracts/Migrator.sol#315) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setTokenInfo(address,address,uint256)._price](v1-migrator/contracts/Migrator.sol#L315) is not in mixedCase\n",
                "id": "08f49b8a921146ce1a1ae0cdadf5388aefb09b722becca7a43e0b69b0a730a2a",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ATLPLOT._paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#19-22) is not in mixedCase\n",
                "markdown": "Variable [ATLPLOT._paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L19-L22) is not in mixedCase\n",
                "id": "0ebc76a22c48d07f98f8ea15ccacbaaf1254262a094ff22a9a7cd506d8a10eac",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter ERC721A.safeTransferFrom(address,address,uint256,bytes)._data (v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#311-312) is not in mixedCase\n",
                "markdown": "Parameter [ERC721A.safeTransferFrom(address,address,uint256,bytes)._data](v1-migrator/contracts/COA-Contracts/land-nfts/ERC721A.sol#L311-L312) is not in mixedCase\n",
                "id": "0f4e09e402a3913feb2fad9f671583ac74f5d7a0b43d8c66f22c9dc9c3539c5f",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable PLOT._paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#25-28) is not in mixedCase\n",
                "markdown": "Variable [PLOT._paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L25-L28) is not in mixedCase\n",
                "id": "176a6b42d67064e0700799e9447a7e4c22687c6c1f65238497f762425d6693d8",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable YARD._paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#25-28) is not in mixedCase\n",
                "markdown": "Variable [YARD._paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L25-L28) is not in mixedCase\n",
                "id": "1c17ad3db45e719efb80d328a205b8f9cdfadfe94e43b502c939e6f983768659",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ACRE._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#28-29) is not in mixedCase\n",
                "markdown": "Variable [ACRE._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L28-L29) is not in mixedCase\n",
                "id": "1d8201764f520e19d387b49ea0aac993451789106a983f98c9251d620a3fc862",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._acre (v1-migrator/contracts/Migrator.sol#279) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._acre](v1-migrator/contracts/Migrator.sol#L279) is not in mixedCase\n",
                "id": "1e49ca332ff2a5d552a375f7ef6315ba6ac15368817ae14fff5770f5a6863f0d",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter ERC721A.multiOwnerOf(uint256[],address)._owner (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#237-238) is not in mixedCase\n",
                "markdown": "Parameter [ERC721A.multiOwnerOf(uint256[],address)._owner](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L237-L238) is not in mixedCase\n",
                "id": "28371293ed47f24027e955d0ad7ca1847ae929b8c03d8282bde105d2afe525c7",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable PLOT._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#29-30) is not in mixedCase\n",
                "markdown": "Variable [PLOT._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L29-L30) is not in mixedCase\n",
                "id": "286ee719543e3e2a31fff851290507b0e17919dd93f367f940b5e00db45cea69",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateERC20Token(uint256,address,address)._token2 (v1-migrator/contracts/Migrator.sol#136) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateERC20Token(uint256,address,address)._token2](v1-migrator/contracts/Migrator.sol#L136) is not in mixedCase\n",
                "id": "2938f813bddb05fab40a6430e3bc5f261c142889cc63cc2bd0f6d8432d5b7165",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ATLYARD._paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#19-22) is not in mixedCase\n",
                "markdown": "Variable [ATLYARD._paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L19-L22) is not in mixedCase\n",
                "id": "298238164209988067b6b37fa02bd33df9bdf3c6ccad253425f8b47235f0efd2",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateERC20Token(uint256,address,address)._token1 (v1-migrator/contracts/Migrator.sol#135-136) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateERC20Token(uint256,address,address)._token1](v1-migrator/contracts/Migrator.sol#L135-L136) is not in mixedCase\n",
                "id": "2a018ee34dc95cd1860b08ee4f870f1b581351e51b591bc99745aa4e7838025a",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ATLACRE._feeCollector (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#22-23) is not in mixedCase\n",
                "markdown": "Variable [ATLACRE._feeCollector](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L22-L23) is not in mixedCase\n",
                "id": "2d1fc5a6c32e6fc7eaa42fe01a3ae26d66f53b4f547fc6a574359e46778c34f9",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._acre (v1-migrator/contracts/Migrator.sol#207-208) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._acre](v1-migrator/contracts/Migrator.sol#L207-L208) is not in mixedCase\n",
                "id": "2ed0b02164d046d3102bb61d6ea2fd8ce7b7b687388df0b29161b9698f93e12c",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter BUSD.mint(address,uint256)._amount (v1-migrator/contracts/COA-Contracts/Busd.sol#10) is not in mixedCase\n",
                "markdown": "Parameter [BUSD.mint(address,uint256)._amount](v1-migrator/contracts/COA-Contracts/Busd.sol#L10) is not in mixedCase\n",
                "id": "39a4ee0713ef80b8bf6f2341acc4ddf254bb8a5d9b150b0f8e20e13490d87569",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._plotV2 (v1-migrator/contracts/Migrator.sol#282) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._plotV2](v1-migrator/contracts/Migrator.sol#L282) is not in mixedCase\n",
                "id": "3bfdf12fb8243eb40e4e860d7d9f798551fb41194a791d5546d9bac8f2c10100",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ATLYARD._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#23-24) is not in mixedCase\n",
                "markdown": "Variable [ATLYARD._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L23-L24) is not in mixedCase\n",
                "id": "3c5e72e19bb036627930e088ad227657ad564b27a136d70647e600b24da45aa6",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setTokenInfo(address,address,uint256)._tokenV1 (v1-migrator/contracts/Migrator.sol#314) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setTokenInfo(address,address,uint256)._tokenV1](v1-migrator/contracts/Migrator.sol#L314) is not in mixedCase\n",
                "id": "43a571f8d41c1337f2041b4bf1049182507fe0d84eb358f90811257f1c6cd38b",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ATLACRE._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#23-24) is not in mixedCase\n",
                "markdown": "Variable [ATLACRE._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L23-L24) is not in mixedCase\n",
                "id": "4765c08a52b2cd1ecd58ea6ca6020b3a72e22282e15a5ce50561ff5f0f4e560c",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ATLPLOT._feeCollector (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#22-23) is not in mixedCase\n",
                "markdown": "Variable [ATLPLOT._feeCollector](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L22-L23) is not in mixedCase\n",
                "id": "4a7cfdb956dd8cc463cdaf4d7270c9d2eef6f2d67a78a4cb5aed9c94f282af66",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable YARD._feeCollector (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#28-29) is not in mixedCase\n",
                "markdown": "Variable [YARD._feeCollector](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L28-L29) is not in mixedCase\n",
                "id": "4d727de224c8b98258b8dfce48c4943b5092899e87ab4b76a0a118a60efe2dad",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ACRE._feeCollector (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#27-28) is not in mixedCase\n",
                "markdown": "Variable [ACRE._feeCollector](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L27-L28) is not in mixedCase\n",
                "id": "51083c8172547525d79ee81e8b64a3e79e6861e2769439cca3d1969ebcae80f8",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._plot (v1-migrator/contracts/Migrator.sol#209) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._plot](v1-migrator/contracts/Migrator.sol#L209) is not in mixedCase\n",
                "id": "60a03f312a4e8cf0f4a1ae27c6f84cbec4587a94313d73f6045261e9e6160801",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateERC20Token(uint256,address,address)._amount (v1-migrator/contracts/Migrator.sol#132-134) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateERC20Token(uint256,address,address)._amount](v1-migrator/contracts/Migrator.sol#L132-L134) is not in mixedCase\n",
                "id": "695a43c746c507fd86163db5cacc386efa4894db566b73e338d0b19da5effbf8",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._plot (v1-migrator/contracts/Migrator.sol#280-281) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._plot](v1-migrator/contracts/Migrator.sol#L280-L281) is not in mixedCase\n",
                "id": "6b362bc6f285aeabda6ace55b63bb3d53b77ca94e85020b9f166058b700b3f0c",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ATLACRE._paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#19-22) is not in mixedCase\n",
                "markdown": "Variable [ATLACRE._paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L19-L22) is not in mixedCase\n",
                "id": "8a9f9035d482c9ee2642a8b3ce867888d44a9c0b22a979693ccf88da3f0149c3",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._acreV2 (v1-migrator/contracts/Migrator.sol#281-282) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._acreV2](v1-migrator/contracts/Migrator.sol#L281-L282) is not in mixedCase\n",
                "id": "9405a9ebd1d60c4689cab0777d96a8f0c4ab6a2c7dd6ad71ae2fcf353c2a2fca",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter PRLZ.mint(address,uint256)._to (v1-migrator/contracts/COA-Contracts/Prlz.sol#10) is not in mixedCase\n",
                "markdown": "Parameter [PRLZ.mint(address,uint256)._to](v1-migrator/contracts/COA-Contracts/Prlz.sol#L10) is not in mixedCase\n",
                "id": "98f9218df20c216ae5740fce0b1fc1c0c3fe1499c591946962d6ecabf290166b",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._yard (v1-migrator/contracts/Migrator.sol#279) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._yard](v1-migrator/contracts/Migrator.sol#L279) is not in mixedCase\n",
                "id": "a2bafacda2e79ef5ffbece37ee3faeb17f62806e2ac21996af932b136572c140",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setTokenInfo(address,address,uint256)._tokenV2 (v1-migrator/contracts/Migrator.sol#314-315) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setTokenInfo(address,address,uint256)._tokenV2](v1-migrator/contracts/Migrator.sol#L314-L315) is not in mixedCase\n",
                "id": "b5a09f5c2bef8a8443c059c08c670410cdb05a239d9048bcbbbd76cd2c2779d3",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ATLYARD._feeCollector (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#22-23) is not in mixedCase\n",
                "markdown": "Variable [ATLYARD._feeCollector](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L22-L23) is not in mixedCase\n",
                "id": "bbb696f48b6d5f3693143af4b97cc6a42b6b9a0676901b363665e5193302621b",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.setERC721Requirements(address,address,address,address,address,address)._yardV2 (v1-migrator/contracts/Migrator.sol#282) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.setERC721Requirements(address,address,address,address,address,address)._yardV2](v1-migrator/contracts/Migrator.sol#L282) is not in mixedCase\n",
                "id": "bf525fe333dcb495a02db32205a72890b190b5abc30a40caf6598f773ef966dc",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable YARD._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#29-30) is not in mixedCase\n",
                "markdown": "Variable [YARD._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts-v2/YARD.sol#L29-L30) is not in mixedCase\n",
                "id": "bfc38b01df9cbe3b60f3cfbabc70c7d97505b6f5ebfb05f9d2971f5cd3c3c686",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter PRLZ.mint(address,uint256)._amount (v1-migrator/contracts/COA-Contracts/Prlz.sol#10) is not in mixedCase\n",
                "markdown": "Parameter [PRLZ.mint(address,uint256)._amount](v1-migrator/contracts/COA-Contracts/Prlz.sol#L10) is not in mixedCase\n",
                "id": "c2b97b335495095b955a8fed81c3376e21989c9068a6e47bca115d249d3844b6",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable PLOT._feeCollector (v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#28-29) is not in mixedCase\n",
                "markdown": "Variable [PLOT._feeCollector](v1-migrator/contracts/COA-Contracts/land-nfts-v2/PLOT.sol#L28-L29) is not in mixedCase\n",
                "id": "c493fddbb021416793094e941e3f886ba9c433a6b593e515332657af94dca619",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ATLPLOT._currentBatch (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#23-24) is not in mixedCase\n",
                "markdown": "Variable [ATLPLOT._currentBatch](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L23-L24) is not in mixedCase\n",
                "id": "c699f3332cd32f2d8a7b9bfed94d4c03356db7e72126a06d40810679cb086e31",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._yard (v1-migrator/contracts/Migrator.sol#210) is not in mixedCase\n",
                "markdown": "Parameter [Migrator.migrateAllAsset(uint256[],uint256[],uint256[])._yard](v1-migrator/contracts/Migrator.sol#L210) is not in mixedCase\n",
                "id": "da0c1f5291c5602935e04cda550fd1e42b4367d6918d4e48b21c56a6a2b8a491",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter BUSD.mint(address,uint256)._to (v1-migrator/contracts/COA-Contracts/Busd.sol#10) is not in mixedCase\n",
                "markdown": "Parameter [BUSD.mint(address,uint256)._to](v1-migrator/contracts/COA-Contracts/Busd.sol#L10) is not in mixedCase\n",
                "id": "e294ca25e2fc978f6e5f40d7ae7156ffd8caced6a8325c845d5d7e154eda9122",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable Migrator.Requirements (v1-migrator/contracts/Migrator.sol#25-28) is not in mixedCase\n",
                "markdown": "Variable [Migrator.Requirements](v1-migrator/contracts/Migrator.sol#L25-L28) is not in mixedCase\n",
                "id": "e5af3b179e315e0492b23c5c93e5b700c5b5fd0ee4760cfafd8907883c35f8f6",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Variable ACRE._paymentToken (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#24-27) is not in mixedCase\n",
                "markdown": "Variable [ACRE._paymentToken](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ACRE.sol#L24-L27) is not in mixedCase\n",
                "id": "e7635bbf1721f8d671dad08f185555e1f01910d2d1c641e468e5f15902bd8b6b",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Function ERC721A.ERC721A_Initialize(string,string) (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#102-107) is not in mixedCase\n",
                "markdown": "Function [ERC721A.ERC721A_Initialize(string,string)](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L102-L107) is not in mixedCase\n",
                "id": "e945ecb9e6fe72616c76ff866032d1f9d7a5872c9f59c8d3a9eb7801335536e5",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Parameter ERC721A.multiOwnerOf(uint256[],address)._ids (v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#236) is not in mixedCase\n",
                "markdown": "Parameter [ERC721A.multiOwnerOf(uint256[],address)._ids](v1-migrator/contracts/COA-Contracts/land-nfts-v2/ERC721A.sol#L236) is not in mixedCase\n",
                "id": "ea9f1ba60d15d8bdf12797c173565046160e6cd70a5a61112c0bf77fc47df981",
                "check": "naming-convention",
                "impact": "Informational",
                "confidence": "High"
            },
            {
                "description": "Migrator.totalAcreMigrated (v1-migrator/contracts/Migrator.sol#31-32) should be constant \n",
                "markdown": "[Migrator.totalAcreMigrated](v1-migrator/contracts/Migrator.sol#L31-L32) should be constant \n",
                "id": "225b40bcb2b3aab259f35fc27d2f0486f6f330738f49516b4ae3bc333dd6d6d9",
                "check": "constable-states",
                "impact": "Optimization",
                "confidence": "High"
            },
            {
                "description": "Migrator.totalYardMigrated (v1-migrator/contracts/Migrator.sol#33-34) should be constant \n",
                "markdown": "[Migrator.totalYardMigrated](v1-migrator/contracts/Migrator.sol#L33-L34) should be constant \n",
                "id": "6d353ccf8c0d806a047f51a50f459bf5d98608857b59f2c2bb0a7bca309f539a",
                "check": "constable-states",
                "impact": "Optimization",
                "confidence": "High"
            },
            {
                "description": "Migrator.totalPlotMigrated (v1-migrator/contracts/Migrator.sol#32-33) should be constant \n",
                "markdown": "[Migrator.totalPlotMigrated](v1-migrator/contracts/Migrator.sol#L32-L33) should be constant \n",
                "id": "ca50228f1cceea4727d85850ce5414c05c0b08a5016e77bc52bb383c42a93ed2",
                "check": "constable-states",
                "impact": "Optimization",
                "confidence": "High"
            },
            {
                "description": "ATLACRE._maxBuyAmount (v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#25-26) should be immutable \n",
                "markdown": "[ATLACRE._maxBuyAmount](v1-migrator/contracts/COA-Contracts/land-nfts/ACRE.sol#L25-L26) should be immutable \n",
                "id": "0a535281a1e4c59497e7f6b21a357c9a9ca62204239e9c21b42dc6e3b499f645",
                "check": "immutable-states",
                "impact": "Optimization",
                "confidence": "High"
            },
            {
                "description": "ATLYARD._maxBuyAmount (v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#25-26) should be immutable \n",
                "markdown": "[ATLYARD._maxBuyAmount](v1-migrator/contracts/COA-Contracts/land-nfts/YARD.sol#L25-L26) should be immutable \n",
                "id": "2b6d9c017c21f667e63248b0d0d2e66b87d48f75d0ab947bc0e647dd5562319b",
                "check": "immutable-states",
                "impact": "Optimization",
                "confidence": "High"
            },
            {
                "description": "ATLPLOT._maxBuyAmount (v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#25-26) should be immutable \n",
                "markdown": "[ATLPLOT._maxBuyAmount](v1-migrator/contracts/COA-Contracts/land-nfts/PLOT.sol#L25-L26) should be immutable \n",
                "id": "86320d494a07a95a65b33600f656228e410fc63fcb5e8e946c66e19a8f67934a",
                "check": "immutable-states",
                "impact": "Optimization",
                "confidence": "High"
            }
        ]
    }
}